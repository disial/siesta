##############################################
 Changes between v4.0 and v4.1-b4
##############################################

------------------------------------------------------------
revno: 1036
tags: v4.1-b4
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Wed 2018-11-07 13:04:27 +0100
message:
  Updated release.sh script to add version/title to the *.tex files
  
  Since we have added PDF-metadata we need a bit more information
  in the files.
------------------------------------------------------------
revno: 1035
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Wed 2018-11-07 09:49:58 +0100
message:
  Updated installation script for NetCDF-4 support (library updates)
------------------------------------------------------------
revno: 1034
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Wed 2018-11-07 09:18:59 +0100
message:
  Updated all test output and added the ones that were missing
  
  Since this run also has the new NRTAB implementation nearly
  all things change (to the X.XY Y digit in energies).
  
  Also amended the RELEASE_NOTES
------------------------------------------------------------
revno: 1033
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Mon 2018-11-05 09:13:09 +0100
message:
  Added TS tests for the run_tests.sh script, also fixed a cp statement
------------------------------------------------------------
revno: 1032
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Fri 2018-11-02 15:12:58 +0100
message:
  Added 3 tests such that we can compare with DirectPhi calculations
  
  For now we have never had tests using DirectPhi, I have now added 2
  tests (and 1 without DirectPhi) such that we can compare:
  
  The si111-spinpol test has been split into 4 test cases:
  
  - si111 (no polarization, no direct-phi)
  - si111-directphi (no polarization, direct-phi)
  - si111-spinpol (polarization, no direct-phi)
  - si111-spinpol-directphi (polarization, direct-phi)
  
  Running the tests for the 4 systems gives the same output (by symmetry).
------------------------------------------------------------
revno: 1031
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Fri 2018-11-02 10:03:25 +0100
message:
  Final fix for OMM with high debug flags
  
  Now the psi array is minimally 1 element big such that we can pass
  arrays as dummy-arguments.
------------------------------------------------------------
revno: 1030
committer: Alberto Garcia <albertog@icmab.es>
branch nick: 4.1
timestamp: Thu 2018-11-01 16:18:16 +0100
message:
  Fix OMM reuse of the psi array from 'densematrix' module
  
  The OMM method can use eigenvectors from diagonalization as seeds. In
  that case the first few nominal OMM iterations are actually calls to
  'diagon'. In 'compute_dm', 'diagon' is now passed an extra (optional)
  argument to signal the need to keep the eigenvectors.  The array 'psi'
  will not be deallocated in diagon, but after the first true OMM step.
  
  (Thanks to Nick Papior for finding the bug)
------------------------------------------------------------
revno: 1029
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Thu 2018-11-01 13:35:25 +0100
message:
  Fixed some more tests with few core requirements, also discovered a bug in OMM
  
  This partially fixes the OMM bug since the psi array wasn't allocated on entry.
  The OMM Gamma-only calculation is still faulty because the psi array *should*
  contain the previous diagon wavefunction coefficients. This commit simply
  ensures the arrays to be allocated. But with wrong numbers. I.e. the subsequent
  OMM cycle produces NaN because psi is 0.
------------------------------------------------------------
revno: 1028
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Wed 2018-10-31 21:04:52 +0100
message:
  Added target for tests which will not pass for more than a couple of procs
  
  This relates to the tests which have fewer orbitals than the number of processors used.
  Now for 8 cores or more we should run:
  
    make tests-proc-limit MPI="mpirun -np 2"
    make MPI="mpirun -np 8"
  
  which will automatically skip the already completed ones.
  
  Fixed mix_linear test
------------------------------------------------------------
revno: 1027
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Wed 2018-10-31 15:15:59 +0100
message:
  Another try at cleaning up tests for running transiesta tests on cluster
------------------------------------------------------------
revno: 1026
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Wed 2018-10-31 09:56:18 +0100
message:
  Cleaned tests and fixed transiesta tests
  
  Many tests had MaxSCFIterations specified, I have removed nearly all of them
  because I think the tests should reflect keywords that are important for the
  test. And also, we need the tests to behave somewhat correct for default values.
------------------------------------------------------------
revno: 1025
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Tue 2018-10-30 21:11:45 +0100
message:
  Allowed a test to continue, even if not converged in # of steps
------------------------------------------------------------
revno: 1024
fixes bug: https://launchpad.net/bugs/1800652
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Tue 2018-10-30 20:38:47 +0100
message:
  Fixed GR-pulay history step
  
  Now the GR pulay variant works as expected if it is the "next" mixer after
  Broyden/Pulay mixers. The history was trying to copy too many elements
  and also, the stored quantities is not the same.
------------------------------------------------------------
revno: 1023 [merge]
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Thu 2018-10-25 21:59:34 +0200
message:
  Merged r586-587, bugfix for grid-cell sampling and output
------------------------------------------------------------
revno: 1022
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Thu 2018-10-25 10:28:50 +0200
message:
  Allowed writing TSDE/TSHS files with FixSpin calculations
  
  This allows one to construct electrodes/initial DM files with
  fixed spin calculations. Then one may use this as input for transiesta
  without fixspin.
------------------------------------------------------------
revno: 1021
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Mon 2018-10-22 17:19:19 +0200
message:
  Removed Metis pivoting in TranSiesta analyze
  
  It *always* produced bad pivoting, and for disconnected graphs
  it would crash.
  Now one can enable it using a pre-processor statement:
    TS_PVT_METIS
  which is not documented because I don't think it is even applicable.
  So better not confuse users to think it is better by having it optionally.
  
  The timer printed for the analyzation is now also for the analyzation method.
------------------------------------------------------------
revno: 1020
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Mon 2018-10-22 16:52:45 +0200
message:
  Updated documentation to prepare for 4.1-b4
  
  Added more references and changed a few citations for consistency.
  The PDF now also internally has the correct title and the author-list
  for the steering committee.
------------------------------------------------------------
revno: 1019
author: Alberto Garcia <albertog@icmab.es>
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Mon 2018-10-22 16:34:22 +0200
message:
  Fixed release notes
------------------------------------------------------------
revno: 1018
committer: Alberto Garcia <albertog@icmab.es>
branch nick: 4.1
timestamp: Mon 2018-10-22 16:12:27 +0200
message:
  Update contributors list and front-matter in manual
  
  Display the composition of the Steering Committee in the front-matter
  of the manual, setting it apart from the list of contributors.
  
  Update Docs/Contributors.txt
------------------------------------------------------------
revno: 1017
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Thu 2018-10-18 22:35:23 +0200
message:
  Allowed +/- for real-space SE
  
  When using the real-space SE one still needs planes to fix the
  Hartree potential. Prior to this commit the sign was fixed to '-'
  which meant that only one side of the cell-box was checked for the
  Hartree plane correction. However, the user should decide because
  one atomic plane may lie on the cell-edge.
  
  Also, a few places we calculated the area of two spanning vectors.
  The equations are now fixed by using the cross-product. The prior
  used equations only worked correctly for orthogonal cells.
------------------------------------------------------------
revno: 1016
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Thu 2018-10-18 19:44:29 +0200
message:
  Fixed OpenMP charge calculation, thanks to Matthieu Verstraete
  
  The collapse statement in dm_charge was wrong, however older
  compilers did not catch this. It was first in GNU 8.2 this was
  caught.
------------------------------------------------------------
revno: 1015
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Thu 2018-10-18 12:07:26 +0200
message:
  Allowed TBT calculation of bulk-DOS for electrodes even for out-of-core calculations
  
  Prior to this commit one could not calculate bulk-DOS/T when *any* electrode
  was using out-of-core capability.
  Now the bulk-DOS/T is calculated for those electrodes that does not use out-of-core.
------------------------------------------------------------
revno: 1014
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Wed 2018-10-17 15:04:40 +0200
message:
  Fixed r1009 for band calculations
  
  Now the densematrix module implemented by using the alloc routine
  in the module to allocate the 3 arrays. This ensures the naming of the
  routine allocation to be equivalent to the deallocation.
------------------------------------------------------------
revno: 1013
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Wed 2018-10-17 11:39:50 +0200
message:
  Final fix for real-space SE
  
  Also made some checks in the dm_update routine more compiler
  robust.
------------------------------------------------------------
revno: 1012
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Tue 2018-10-16 13:10:27 +0200
message:
  Updated makefiles and dates in manual
  
  Also added Fabiano as contributor in the manual.
------------------------------------------------------------
revno: 1011
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Tue 2018-10-16 12:59:17 +0200
message:
  Fixed TBTGF name for TBT.Spin
  
  Since the TBTGF always contains *all* spin-components we don't need
  specific up/down file names.
------------------------------------------------------------
revno: 1010
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Tue 2018-10-16 10:54:32 +0200
message:
  Fixed electrode transverse Gamma kgrid-checks
  
  When an electrode is non-periodic transverse to the semi-infinite
  direction there is no point in checking the k-point sampling
  in transiesta
------------------------------------------------------------
revno: 1009
committer: Alberto Garcia <albertog@icmab.es>
branch nick: 4.1
timestamp: Mon 2018-10-15 23:10:25 +0200
message:
  Deallocate arrays in densematrix as soon as possible
------------------------------------------------------------
revno: 1008 [merge]
committer: Alberto Garcia <albertog@icmab.es>
branch nick: 4.1
timestamp: Mon 2018-10-15 23:08:05 +0200
message:
  Merge documentation for real-space grid
------------------------------------------------------------
revno: 1007
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Mon 2018-10-15 21:44:45 +0200
message:
  Fixed MD calculations and CDF.Save (non-compatible)
  
  The CDF is now disabled for anything but 1-shot calculations
  and FC calculations.
------------------------------------------------------------
revno: 1006
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Mon 2018-10-15 21:43:23 +0200
message:
  Updated the release-notes
------------------------------------------------------------
revno: 1005
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Tue 2018-10-09 21:59:16 +0200
message:
  Added developer note for transiesta and sisl
------------------------------------------------------------
revno: 1004
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Tue 2018-10-09 20:07:41 +0200
message:
  Fixed output of Buffer charge in SCF
------------------------------------------------------------
revno: 1003
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Tue 2018-10-09 14:17:05 +0200
message:
  Fixed diag calls for 4.1 with work-size queries
  
  This was caught using valgrind and using the expert driver.
  Apparently the expert driver uses more than 1 element in the work-size
  query calls.
  The work arrays are now 10 upon query. It should be more than enough
  since 4 seems like the upper bound.
------------------------------------------------------------
revno: 1002
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Tue 2018-10-09 14:01:13 +0200
message:
  Moved buffer charge print-out to be at the end
------------------------------------------------------------
revno: 1001
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Mon 2018-10-08 11:08:53 +0200
message:
  Reduced disk-space usage for Gamma-only electrodes
  
  A huge memory reduction can be done when an electrode is transverse k-point Gamma-only.
  I.e. if there are no interactions along the transverse directions there
  is no point in re-calculating the same self-energy over and over.
  
  This is often encountered in N>2 terminal calculations and in e.g. graphene-GNR
  constrictions.
  
  This feature is not fully tested and should be tested before 4.1-b4 is released.
------------------------------------------------------------
revno: 1000
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Wed 2018-10-03 08:07:00 +0200
message:
  Improved output when GF files fail their checks
------------------------------------------------------------
revno: 999
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Tue 2018-10-02 14:27:31 +0200
message:
  Fixed too small work array for huge electrodes compared to the device
  
  This happens in cases with bias and for electrodes with matrix elements
  exceeding half the full matrix.
  Now there is an explicit calculation of the required work-array when
  expanding the self-energies.
------------------------------------------------------------
revno: 998
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Tue 2018-10-02 13:47:31 +0200
message:
  Cleaned save_density_matrix, there were problems for certain TSDE writes
  
  Now the TSDE writes functions as initially anticipated.
  If the user requests TS.DE.Save, it will be obeyed regardless of Write.DM.
  Currently the only deficiency is when SCF.MixAfterConvergence is true Siesta
  will do 2 writes of TSDE.
------------------------------------------------------------
revno: 997
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Tue 2018-10-02 12:50:11 +0200
message:
  Transferred save_density_matrix to F90, no code changes
------------------------------------------------------------
revno: 996
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Tue 2018-10-02 09:25:40 +0200
message:
  Added more information when GF files are not consistent
  
  Now the energy points are written
------------------------------------------------------------
revno: 995
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Thu 2018-09-27 14:25:13 +0200
message:
  Finalized real-space GF testing
  
  Now real-space GF works with transiesta and tbtrans
------------------------------------------------------------
revno: 994
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Tue 2018-09-25 14:23:45 +0200
message:
  Minor bug-fixes related to real-space SE
------------------------------------------------------------
revno: 993
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Tue 2018-09-25 11:33:01 +0200
message:
  Enabled real-space self-energies
  
  Now TranSiesta/TBtrans can read in TSGF/TBTGF files containing the real-space
  self-energies corresponding to 2 directions collapsed into one.
  This is accomblished by specifying two directions in the semi-infinite direction:
  
    semi-inf AB
    semi-inf AC
  
  where the sign -/+ have no effect.
------------------------------------------------------------
revno: 992
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Mon 2018-09-24 09:27:11 +0200
message:
  Ensured TSDE is only written at convergence for non-TS calculations
------------------------------------------------------------
revno: 991 [merge]
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Wed 2018-09-19 08:59:17 +0200
message:
  Merged Alberto's additional documentation
  
  Now the utilites are described at a higher level.
------------------------------------------------------------
revno: 990
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Fri 2018-09-14 14:32:34 +0200
message:
  Allowed multiple electrodes to automatically set the non-equilibrium contour
  
  Since the neq-contour has changed one can easily find the automatic non-equilibrium
  contour. This is now allowed.
  Only equilibrium contours require a user-input for multiple electrodes (could be
  made automatic).
------------------------------------------------------------
revno: 989
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Thu 2018-09-13 09:48:58 +0200
message:
  Forgot to add variable use in module
------------------------------------------------------------
revno: 988
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Wed 2018-09-12 21:32:51 +0200
message:
  Fixed when to writeout TSDE files
------------------------------------------------------------
revno: 987
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Wed 2018-09-12 15:31:30 +0200
message:
  Updated makefiles in Utilities
------------------------------------------------------------
revno: 986 [merge]
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Wed 2018-09-12 15:30:24 +0200
message:
  Implemented closing of the majority of commonly used blocks
  
  Closing of blocks in the log when using fdf_b* calls was problematic
  if the code did not read the last line of the block (i.e. this was
  the only way to ensure the %endblock <label> in the fdf-*.log.
  
  There are some problems with this and transiesta because the transiesta
  codes are using fdf_bbackspace (which re-writes to the log file).
  However, for Siesta the above should work.
------------------------------------------------------------
revno: 985 [merge]
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Wed 2018-09-12 15:27:51 +0200
message:
  Fixing MD/supercell changes to the sparsity pattern, add initial developer documentation template
  
  This fixes the remaining issue of changing the sparsity pattern while using DM extrapolation.
  I.e. now the DM_history sparse matrices are aligned with the current MD-steps sparse pattern.
  Additionally this change also allows reading *any* DM file which is then converted to the intrinsic
  sparse pattern used by siesta. This brings forth a nice platform for creating better initial guesses
  based on simpler models (e.g. use sisl to create a better guess).
  
  Secondly, Alberto created an initial template for doing developer documentation in Siesta.
  Now FORD (doxygen for testing purposes) may be used to generate documentation of the full
  Siesta code!
  Indeed this is extremely valuable to point new-comers to internal details in Siesta.
  
  This merge also adds developers documentation to clarify usages and variables in the code
  base. Essentially the main functionality of the class-based types are documented with
  emphasis on the Sparse pattern type. This is justified by the wide-spread use of these
  data-types across the code-base.
  
  This merge is a big collaboration effort between Nick R. Papior and Alberto Garcia.
------------------------------------------------------------
revno: 984
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Tue 2018-09-11 20:46:44 +0200
message:
  Removed unused routine in TBtrans
------------------------------------------------------------
revno: 983
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Sat 2018-09-08 06:18:59 +0200
message:
  fdf-updates, allow fixing block-log output, added block-line-count and is-block
  
  The fdf-infrastructure is default to create log-output files. However, these
  log-files are not directly usable as input for subsequent siesta runs.
  The reason was that blocks *only* wrote out %endblock to the log if
  fdf_bline was called until it failed, i.e. to the end of the block.
  And currently many places in siesta was reading based on another integer
  input. Secondly, the fdf_defined opened a block which isn't necessary.
  
  The solution is divided into a few things, parenthesis is the interface:
  
  fdf_isblock: (label)
  Added this routine to check whether a label is defined as a block.
  Currently there may be inconsistencies if the label is used both as
  block and label, however one can then programatically decide.
  This routine is now used in fdf_defined because it removes the call
  to fdf_block (which opens the block).
  
  Writes
  
    #:block? <label> T/F
  
  to log.
  
  fdf_bclose: (block_fdf)
  Added routine to loop the remaining lines in the block. This is never necessary
  unless one wants the log-file to be complete in terms of re-use.
  I.e. if one reads all lines in the block via:
     do while ( fdf_bline(bfdf, pline) )
       ...
     end do
  there is no need for fdf_bclose. However, with
  
     n = fdf_get('LabelSize', 0)
     if ( n > 0 .and. fdf_block('Label', bfdf) ) then
       do i = 1, n
          if ( fdf_bline(bfdf, pline) ) then
  	  ...
  	end if
       end do
     end if
     call fdf_bclose(bfdf)
  
  it is required to use fdf_bclose to close the block in the log.
  
  fdf_block_linecount: (label, morph?)
  Added routine to count the number of lines in a block.
  If morph is not specified, any line counts as a valid line.
  If morph is present a match will be done for each line, and if
  accepted it counts as a line.
  For instance in AtomicCoordinatesAndAtomicSpecies one would do:
  
    na = fdf_block_linecount('AtomicCoordinatesAndAtomicSpecies', 'vvvi')
  
  Note that this routine will suppress writing to the log file. The only thing
  that is written to the log-file is:
  
    #:block-line-count? <label> (morph?) N
  
  
  Secondly, all log-output that does not result in a valid input line is
  prefixed with '#:'
  This was the case for fdf_bbackspace which simply wrote out "(Backspace to..."
  Now it writes: "#:(Backspace to..."
  Also fixed in fdf_defined.
------------------------------------------------------------
revno: 982
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Thu 2018-09-06 21:25:04 +0200
message:
  Allowed Src/Libs/create.sh to specify the directory using LAPACK_DIR
------------------------------------------------------------
revno: 981
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Thu 2018-09-06 12:00:24 +0200
message:
  Added sparse matrices to the lua interface
------------------------------------------------------------
revno: 980
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Wed 2018-09-05 05:32:13 +0200
message:
  Added missing define-statements for missing variables
------------------------------------------------------------
revno: 979
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Wed 2018-09-05 05:19:15 +0200
message:
  Added missing if-statement for CDF-writes
------------------------------------------------------------
revno: 978
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Tue 2018-09-04 15:37:24 +0200
message:
  Added missing flag in the intel.make file
  
  The intel compilers are way too aggressive on optimizations.
  By adding -fp-model source/precise to the FFLAGS and FFLAGS_DEBUG
  we can obtain correct execution for the following intel compilers:
  
      2013.0.028 
      2013.1.039 
      2013.1.046 
      2015.0.090 
      2015.1.133 
      2015.3.187 
      2016.1.0.423501 
      2016.2.0 
      2017.0.035 
      2017.1.043 
      2017.4.196 
      2017.7.065 
      2018.0.033 
      2018.1.038 
      2018.2.046 
      2018.3.051
------------------------------------------------------------
revno: 977
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Tue 2018-09-04 13:56:15 +0200
message:
  Automatically add MRRR for serial compilations with libsiestaLAPACK.a
------------------------------------------------------------
revno: 976
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Tue 2018-09-04 13:07:32 +0200
message:
  Updated shipped BLAS+LAPACK to c5471e8be2754345ec650c8d3b08c6eb680ebd0c
  
  Several bug-fixes in LAPACK have been found regarding 2-stage solvers etc.
------------------------------------------------------------
revno: 975
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Tue 2018-09-04 09:17:16 +0200
message:
  Bugfix in ncdf-siesta module, .nc was created before dhscf_init
  
  Now the mesh gets written correctly, i.e. after the grid size has been setup.
  This is now done in dhscf_init which is the only place where ntm is changed.
  
  Also amended two missing deallocates (which is primarily needed for older intel compilers)
------------------------------------------------------------
revno: 974
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Sat 2018-09-01 22:12:17 +0200
message:
  Removed TBT DOS normalization as well as increased precision in k-points
------------------------------------------------------------
revno: 973
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Fri 2018-08-31 10:16:05 +0200
message:
  Bugfix when using elec-box in the Hartree solution and Bloch-expansion
  
  There were problems when using the Bloch expansion and a box-Hartree/Voltage
  solution. Effectively the electrode box was only the minimal box which meant
  that it failed to capture the repeated atoms and thus would crash.
  
  Now the expansion of the box is fixed and the suggestions for displacing the
  device is better.
  
  Thanks to Gaetano Calogero for finding the bug.
  
  Also added a flag to explicitly specify which electrode should be used as the
  electrode-plane.
------------------------------------------------------------
revno: 972
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Thu 2018-08-30 20:41:18 +0200
message:
  Ensured output of NCDF=0|1 are the same
------------------------------------------------------------
revno: 971
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Thu 2018-08-30 20:16:37 +0200
message:
  Bugfix for the offset in the A calculation.
  
  This fixes certain boundary cases with debug compilations.
------------------------------------------------------------
revno: 970
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Thu 2018-08-30 11:50:47 +0200
message:
  Fixed normalization output in the ASCII files for TBtrans
  
  The normalization constants where missing when not compiled with NetCDF.
------------------------------------------------------------
revno: 969
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Wed 2018-08-22 09:18:33 +0200
message:
  Performance increase for searching the sparse arrays
  
  For now only the tbtrans code is benefitting from this, but
  it may be good to use this searching method elsewere.
  
  This performance increase helps:
  
    - COOP/COHP
    - bond-currents
------------------------------------------------------------
revno: 968
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Tue 2018-08-21 20:24:45 +0200
message:
  Cleaned loops in m_tbt_tri_scat for internal loops
------------------------------------------------------------
revno: 967 [merge]
fixes bug: https://launchpad.net/bugs/1787939
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Mon 2018-08-20 20:25:28 +0200
message:
  Merged r585, bugfix for PDOS fmpdos utility
------------------------------------------------------------
revno: 966
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Fri 2018-08-17 17:05:29 -0400
message:
  Moved writing of ORB_INDX, also made it optional
  
  Now ORB_INDX is optional. For now it is still the default
  but we may consider removing it because it tends to produce
  MB of data for only minimal use.
------------------------------------------------------------
revno: 965
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Fri 2018-08-17 16:49:32 -0400
message:
  Cleaned dir_GfGGf to work for more splittings
------------------------------------------------------------
revno: 964
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Sun 2018-08-12 07:36:38 +0200
message:
  Small speed up for propagation spectral function
------------------------------------------------------------
revno: 963
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Sat 2018-08-11 22:49:03 +0200
message:
  Fixed bug introduced in 956 for the propagation routine
  
  Long live two implementations!
------------------------------------------------------------
revno: 962
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Sat 2018-08-11 22:43:08 +0200
message:
  Fixed documentation for PHtrans
  
  Several places the units in the output files were
  written as eV (however, they were in eV**2).
  
  Also added note about TBT.BTD.Spectral in the
  documentation.
------------------------------------------------------------
revno: 961
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Fri 2018-08-10 22:45:53 +0200
message:
  Bugfix for PHtrans transmission eigenvalues
------------------------------------------------------------
revno: 960
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Fri 2018-08-10 22:35:31 +0200
message:
  Bugfix introduced in 955, the N_Elec2 had the wrong bound
------------------------------------------------------------
revno: 959
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Fri 2018-08-10 22:21:57 +0200
message:
  Fixed self-energy unit when doing PHtrans
  
  TODO go through all phonon parts and check units.
------------------------------------------------------------
revno: 958 [merge]
fixes bug: https://launchpad.net/bugs/1786218
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Thu 2018-08-09 12:58:26 +0200
message:
  Merged r584, bugfix for printing out too much
------------------------------------------------------------
revno: 957
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Thu 2018-08-09 12:57:33 +0200
message:
  Introduced logical variables to limit the save_DATA look-up
------------------------------------------------------------
revno: 956
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Wed 2018-08-08 14:16:15 +0200
message:
  Small performance increase for very large systems
  
  Now very big systems are even faster (negligeble for small systems).
------------------------------------------------------------
revno: 955
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Tue 2018-08-07 21:37:56 +0200
message:
  Cleaned routines in TS modules
  
  There were some routines that were implemented with only 1 use.
  The corresponding routine has been squashed into the using function.
------------------------------------------------------------
revno: 954
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Tue 2018-08-07 15:00:02 +0200
message:
  Bugfix for initialization of variable
  
  A variable for calculating the required worksize was not initialized properly which
  could in certain cases result in seg-faults.
  This has now been fixed as well as some other small things.
------------------------------------------------------------
revno: 953
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Thu 2018-08-02 22:16:22 +0200
message:
  Added projection option print-out, also forced DOS.A to be set
  
  When asking for orbital currents or something related to the spectral function
  the DOS.A is now automatically set to true (its overhead is only calling DOS_A).
  The above also applies for DOS.Gf and also for projections.
  
  The projections now also enable writing out option information.
------------------------------------------------------------
revno: 952
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Tue 2018-07-31 15:27:58 +0200
message:
  Fixed gen-basis as per note by J. Soler, enabled multiple species and LDA+U
  
  The gen-basis utility has been fixed to run (r679 changed the workings of initatom
  which should have been reflected in gen-basis).
  
  Now these things are fixed:
  
  gen-basis may:
  1) read in from file like siesta does now (i.e. no need to pipe)
  2) read in LDA+U specifications (so if future implementations write out the LDA+U basis
     information it is automatically propagated to gen-basis)
  3) allow reading more than one specie (i.e. it should enable reading and plotting
     multiple species)
  4) also write out the ion.xml basis files (mainly because external programs may use it)
  
  I have extended the example with a Ghost oxygen and all plotting files are succesfully
  generated.
------------------------------------------------------------
revno: 951 [merge]
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Mon 2018-07-30 12:50:17 +0200
message:
  Enabled DM/COOP/COHP calculations using projections
  
  Also fixed several memory leaks in the projection routines.
  
  Amended documentation.
------------------------------------------------------------
revno: 950
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Mon 2018-07-30 12:26:25 +0200
message:
  Fixed fdf_brange bug
  
  In some cases the fdf_brange could crash if one specified steps and starting points
  in insufficient ways.
  This has been fixed now.
------------------------------------------------------------
revno: 949
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Sun 2018-07-29 20:03:17 +0200
message:
  Trying to circumvent an ancient intel compiler bug
  
  Sadly, I am in no position to check whether it works because I don't have
  that old a compiler.
------------------------------------------------------------
revno: 948 [merge]
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Mon 2018-07-23 15:11:04 +0200
message:
  Fixed indentation in tbt_tri_scat
------------------------------------------------------------
revno: 947 [merge]
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Thu 2018-07-19 21:39:42 +0200
message:
  Merged r583, merged contributor
------------------------------------------------------------
revno: 946
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Fri 2018-07-13 20:31:43 +0200
message:
  Cleaned m_filter.f90 routine
  
  The filtering used an ancient diagonalization routine of rdiag which
  forced the use of the overlap matrix, however the implementation
  always used a diagonal basis in which case there was never a need for S.
  
  This plus removal of redundant matrices have been implemented.
  The dtrsm call has been removed since S was always diagonal.
  
  This commit introduces no code changes other than clean-ups.
------------------------------------------------------------
revno: 945
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Fri 2018-07-13 20:14:42 +0200
message:
  Bumped nmesh to 1024 in m_filter.f90
  
  Certain FilterCutoff values did not result in usable
  basis functions. This change should resolve most of the problems.
  
  This result will change all basis-functions using the FilterCutoff option
  and destroys any backward compatibility for such calculations. Since
  the filtering is only applied when FilterCutoff is specified the majority
  of calculations should be unaffected.
------------------------------------------------------------
revno: 944
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Fri 2018-07-13 20:12:29 +0200
message:
  Cleaned up grdsam.F90 for easier code understanding
  
  Also fixed the documentation link to the respective article
  and not the arXiv article.
------------------------------------------------------------
revno: 943
committer: Alberto Garcia <albertog@icmab.es>
branch nick: 4.1
timestamp: Mon 2018-07-09 22:11:14 +0200
message:
  Use code from m_io in io.f
  
  Avoid two separate implementations of the same functionality.
------------------------------------------------------------
revno: 942
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Mon 2018-07-09 21:00:26 +0200
message:
  Added compression for the FC output
  
  Also added atomic indices for the displaced atoms.
  Mainly to be used later on.
------------------------------------------------------------
revno: 941
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Mon 2018-07-09 20:29:17 +0200
message:
  Fixed format in write, m_handle_sparse
------------------------------------------------------------
revno: 940 [merge]
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Mon 2018-07-09 15:25:22 +0200
message:
  Merged r579-582, merged tests, ofc unit and madelung
------------------------------------------------------------
revno: 939 [merge]
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Mon 2018-07-09 10:01:54 +0200
message:
  Merged ncdf-md fixes, and MD steps
------------------------------------------------------------
revno: 938
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Fri 2018-07-06 22:00:09 +0200
message:
  Updated debugging messages in the mesh_node routine
------------------------------------------------------------
revno: 937
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Tue 2018-07-03 15:43:29 +0200
message:
  Changed the weighting for the charges to be based on the normalized weights
------------------------------------------------------------
revno: 936
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Thu 2018-06-28 15:53:17 +0200
message:
  Fixed a few remaining issues with electrode options and the xa_EPS for elec-DM-copy
  
  Now all options specified for tbtrans *must* be located at the end.
  
  All electrode replicate flags have been removed (use Bloch instead).
  
  Fixed a coordinate check variable to ensure we don't copy too many DM elements
  from the electrode.
------------------------------------------------------------
revno: 935
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Tue 2018-06-26 16:05:53 +0200
message:
  Clean-up of DM.Init.Bulk (still undocumented feature)
  
  Now one can fine-tune the details using Tile/Repeat
  and also the atomic coordinate check may now be decided
  by the user.
------------------------------------------------------------
revno: 934 [merge]
committer: Alberto Garcia <albertog@icmab.es>
branch nick: 4.1
timestamp: Tue 2018-06-26 11:36:16 +0200
message:
  Enable auxcell in diag*g and pdos*g. Clarify 'gamma' meaning. NaiveAuxCell
  
  * Enable real-arithmetic operation with an auxiliary cell
  
  The diag*g and pdos*g routines are now able to work transparently even
  if an auxiliary supercell is used (either with explicit use of a
  passed indxuo array or by means of an equivalent MODP helper function
  in 'intrinsic_missing' (a mod with a [1,p] target domain, instead of
  [0,p-1])).
  
  * Clarify the logic flow of the 'gamma'-related variables
  
  The 'm_gamma' module has been removed. 'Gamma' itself is reserved to
  signal an actual gamma-point-only operation in relevant routines. It
  is passed as an argument, with appropriate values imported from the
  k-point sampling modules.
    
  When needed, the use of an auxiliary supercell is detected on the
  basis of the equality or not of 'no_s' and 'no_u'.
  
  The HSX files now output information in 'auxiliary supercell' mode
  (former 'gamma' .false.) even if the supercell is trivially the unit
  cell. They always contain the 'indxuo' array.
    
  Code in Util/COOP has been changed to avoid a spurious check on
  equivalence of the two 'gamma's (one indicating whether wavefunction
  info is complex or real, and the other the presence of a supercell).
  
  It is not possible (or meaningful...) to run a PEXSI calculation with
  a forced auxcell.
    
  Some obsolete checks on indxuo have been removed.
  
  * Re-instate 'naive-auxiliary-cell' option
  
  The auxiliary supercell needed can be determined using the atomic
  positions, the orbital extent and the lattice parameters. For a fixed
  geometry configuration the tightest auxiliary supercell is uniquely
  defined. However, when performing MD simulations (or relaxations) the
  displacement of certain atoms may result in changes to the required
  auxiliary supercell, thus inhibiting re-use of DM information across
  geometry steps.  When this is option is true the auxiliary supercell
  will be computed with a simpler algorithm using only the orbital
  extent and the lattice vectors. The resulting supercell might be
  larger than strictly needed, but it will remain mostly constant during
  the run (even when the MD.VariableCell option is used, if the lattice
  changes are moderate).
    
  By default this will be false when performing single-point
  calculations (MD.TypeOfRun:CG with MD.NumCGsteps:1 or
  below). Otherwise this will default to true.
  
  (Thanks to Nick Papior for several ideas)
------------------------------------------------------------
revno: 933
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Tue 2018-06-19 13:00:00 +0200
message:
  Corrected EDM setting when using electrode bulk DM
  
  Also added a flag TS.Hartree.Offset which specifies a
  global offset that will be added to the Hartree potential.
  
  Also enabled TS.Elecs.DM.Init force-bulk to also do it
  in V /= 0 bias calculations.
------------------------------------------------------------
revno: 932
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Mon 2018-06-18 13:11:40 +0200
message:
  Fixed electrode names and TBT.*nc output
  
  Now electrodes may not be named Device/Buffer or
  having an "+" in the name.
  
  Secondly, the atomic indices of the electrode regions are now stored
  in the nc file-outputs.
  
  This enables sisl to attach group-names.
------------------------------------------------------------
revno: 931
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Fri 2018-06-15 14:05:36 +0200
message:
  Limited integer field size in ofc
------------------------------------------------------------
revno: 930
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Fri 2018-06-15 13:53:45 +0200
message:
  Increased precision for FA/FC files (also added some meta-data)
  
  The FC files now contain the number of atoms and the displacement used.
  
  Both the FC and FA files now use an increased precision.
------------------------------------------------------------
revno: 929
committer: Alberto Garcia <albertog@icmab.es>
branch nick: 4.1
timestamp: Tue 2018-06-12 15:18:32 +0200
message:
  Increase precision of tables in .ion files
------------------------------------------------------------
revno: 928
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Tue 2018-06-12 11:46:35 +0200
message:
  Added print-out of buffer charge (if present)
  
  When doing charge corrections in the buffer region it
  is a nice tool to check the charge fluctuations in the buffer
  region.
------------------------------------------------------------
revno: 927
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Tue 2018-06-12 10:25:55 +0200
message:
  Fixed TS.Elecs.DM.Init to diagon for bias calculations
  
  Since the DM should only be copied in the V == 0 case
  we now disable this when requesting it for bias calculations.
------------------------------------------------------------
revno: 926
committer: Alberto Garcia <albertog@icmab.es>
branch nick: 4.1
timestamp: Fri 2018-06-08 18:37:51 +0200
message:
  Fix argument errors in new overfsm routine
  
  A few errors were introduced in	the conversion of overfsm to .f90 format
------------------------------------------------------------
revno: 925 [merge]
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Fri 2018-06-08 16:34:39 +0200
message:
  Merged r577-578, merged wave-io and iosockets fix
------------------------------------------------------------
revno: 924 [merge]
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Fri 2018-06-08 11:26:15 +0200
message:
  Merged overfsm-S-remove branch
  
  This removes the calculation of S in overfsm. And also
  updates the code to f90 compliant code.
------------------------------------------------------------
revno: 923
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Thu 2018-06-07 22:08:23 +0200
message:
  Corrected logic flow of NumberOfEigenstates for negative values
------------------------------------------------------------
revno: 922
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Wed 2018-06-06 15:39:33 +0200
message:
  Fixed pivoting errors arising when the k-point sampling does not influence it
  
  Now transiesta prints out warnings but does not die for orientations that
  are allowed by the k-point sampling.
------------------------------------------------------------
revno: 921 [merge]
author: Yann Pouillon <yann.pouillon@unican.es>
committer: Alberto Garcia <albertog@icmab.es>
branch nick: 4.1
timestamp: Wed 2018-05-30 11:06:35 +0200
message:
  YAML infrastructure for output testing
  
  (By Yann Pouillon)
  
  The implementation consists of:
  
  * A simple hook in siesta.F to call the siesta_write_yaml routine
  in module Src/m_io_yaml.F90.
  
  * A YAML reference directory: Tests/YAML_Refs/
    (currently populated by just three token examples)
  
  * A post-processing script: Tests/Scripts/yaml_compare.py
  
  * A configuration file  Tests/siesta-testsuite.yml
  
  See Docs/yaml_tests/README for more information.
  
  Notes
  
  - Only energies are processed in this initial implementation.
  - The post-processing script depends on ruamel.yaml (pip install [--local] ruamel.yaml)
  - SIESTA does not require LibYAML to emit YAML files
------------------------------------------------------------
revno: 920
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Fri 2018-05-25 13:13:25 +0200
message:
  Fixed transiesta-tbtrans tests
  
  Some tests did not force the TSHS creation for electrodes.
------------------------------------------------------------
revno: 919
committer: Alberto Garcia <albertog@icmab.es>
branch nick: 4.1
timestamp: Sun 2018-05-20 00:20:46 +0200
message:
  Put an io_close call in the right block
  
  An out-of-block io_close in basis_io might inadvertently close unit 0.
------------------------------------------------------------
revno: 918
committer: Alberto Garcia <albertog@icmab.es>
branch nick: 4.1
timestamp: Tue 2018-05-15 12:43:53 +0200
message:
  Consolidate treatment of KB and LDAU projectors in hsparse/atom_graph
  
  Avoid extra work when both KB and LDAU projectors are present, and
  clarify the code.
------------------------------------------------------------
revno: 917
committer: Alberto Garcia <albertog@icmab.es>
branch nick: 4.1
timestamp: Tue 2018-05-15 11:48:18 +0200
message:
  Remove obsolete options related to auxiliary supercell
  
  The options 'FixAuxiliaryCell' and 'NaiveAuxiliaryCell' have
  been removed, as they are inconsistent with the more stringent tests
  on the adequacy of the auxiliary supercell.
------------------------------------------------------------
revno: 916 [merge]
committer: Alberto Garcia <albertog@icmab.es>
branch nick: 4.1
timestamp: Tue 2018-05-15 10:57:29 +0200
message:
  Merged 4.0-576: diagnostics and clarifications on folding
------------------------------------------------------------
revno: 915
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Mon 2018-05-14 12:02:49 +0200
message:
  Fixed worksize for the self-energy expansion for very small device regions
  
  There was a bug when having a too small device region. In those cases
  the calculated work-size was too small. It should be fixed now.
------------------------------------------------------------
revno: 914
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Mon 2018-05-14 08:46:52 +0200
message:
  Updated manual for the k-point sampling of electrodes
------------------------------------------------------------
revno: 913
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Wed 2018-05-09 14:05:31 +0200
message:
  Fixed phase factor in COHP calculation using Green function and dH
  
  The phases were wrong for the COHP curve for the Green function.
  This was due to r904 were the phase had been reversed.
  
  Also added comments on remaining phases to denote their intention.
------------------------------------------------------------
revno: 912 [merge]
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Tue 2018-05-08 13:36:55 +0200
message:
  Merged r575, merged io-precision
------------------------------------------------------------
revno: 911
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Tue 2018-05-08 11:37:22 +0200
message:
  Added units to transmission data and orbital transmission
------------------------------------------------------------
revno: 910
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Tue 2018-05-08 09:11:34 +0200
message:
  Fixed unit output of the TBT data files
------------------------------------------------------------
revno: 909
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Mon 2018-05-07 08:45:38 +0200
message:
  Cleaned information output of sparsity patterns
------------------------------------------------------------
revno: 908
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Sun 2018-05-06 21:31:54 +0200
message:
  Added units and normalization of DOS in ASCII output for tbtrans
------------------------------------------------------------
revno: 907
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Sun 2018-05-06 14:32:53 +0200
message:
  The density matrix output per energy in tbtrans is in 1/Ry
  
  The units of the non-integrated DM is of-course in 1/Ry.
  The unit is now fixed.
------------------------------------------------------------
revno: 906
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Sun 2018-05-06 14:20:15 +0200
message:
  Fixed a problem for tbtrans when it is writing out data-files
  
  The outputted data-files from tbtrans was sometimes prematurely
  truncated due to a missing barrier (for large number of kpt and/or E).
  
  Now a barrier has been inserted to ensure all IO is done before it
  completes.
------------------------------------------------------------
revno: 905
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Sun 2018-05-06 13:43:25 +0200
message:
  Enhanced output when the basal-plane of the electrode is not situated correctly
  
  This error is only applicable for skewed transport directions (i.e. non-orthogonal
  semi-infinite vectors).
------------------------------------------------------------
revno: 904 [merge]
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Fri 2018-05-04 21:10:41 +0200
message:
  Merged 4.1-ts branch with bug-fixes for pivoting and DM calculation in tbtrans
------------------------------------------------------------
revno: 903
committer: Alberto Garcia <albertog@icmab.es>
branch nick: 4.1
timestamp: Fri 2018-04-27 11:35:52 +0200
message:
  Update import of qs,efs in pexsi_local_dos code
------------------------------------------------------------
revno: 902 [merge]
committer: Alberto Garcia <albertog@icmab.es>
branch nick: 4.1
timestamp: Thu 2018-04-26 15:11:28 +0200
message:
  Merged 4.0 r574: catch charge inconsistencies in basis states
------------------------------------------------------------
revno: 901 [merge]
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Wed 2018-04-25 13:33:32 +0200
message:
  Merged r571-573, merged new tests and adding all directories to tests
  
  Also fixes for gnubands.f90
------------------------------------------------------------
revno: 900 [merge]
committer: Alberto Garcia <albertog@icmab.es>
branch nick: 4.1
timestamp: Wed 2018-04-25 00:12:50 +0200
message:
  Merged 4.0 r568-570: missing CML dictRefs, Harris 'convergence'
  
  (Note that Src/wxml/flib_wcml has not been changed in this series)
------------------------------------------------------------
revno: 899
committer: Alberto Garcia <albertog@icmab.es>
branch nick: 4.1
timestamp: Tue 2018-04-24 11:14:21 +0200
message:
  Remove obsolete print_initial_spin
------------------------------------------------------------
revno: 898 [merge]
committer: Alberto Garcia <albertog@icmab.es>
branch nick: 4.1
timestamp: Tue 2018-04-24 11:03:41 +0200
message:
  Merge r567; spin-in-scf docs; expand NOT_CONV fields
------------------------------------------------------------
revno: 897 [merge]
committer: Alberto Garcia <albertog@icmab.es>
branch nick: 4.1
timestamp: Sun 2018-04-22 15:31:11 +0200
message:
  Fix bug and clarify code in dfscf for SOC case
  
  In dfscf there was overcounting of the off-diagonal elements in the SOC case
  (first doubling of 3:4 and then copying of 3:4 into 7:8 components).
  
  Besides, the code was confusing, since the grid potential has only four
  bona-fide components, but was artificially extended to match the 8-component
  DM in the SOC case. A clarification (and simplification) can be achieved if
  the DM is explicitly "spin-box hermitified" in the same way as it is done
  in the computation of the charge density.
------------------------------------------------------------
revno: 896
committer: Alberto Garcia <albertog@icmab.es>
branch nick: 4.1
timestamp: Thu 2018-04-19 10:46:09 +0200
message:
  Control of orbital magnetic moment output in 'state_analysis'
  
  Extend the spirit of a previous patch to 'state_analysis', to
  control the output of orbital moment information at the end
  of the scf cycle.
------------------------------------------------------------
revno: 895
committer: Alberto Garcia <albertog@icmab.es>
branch nick: 4.1
timestamp: Wed 2018-04-18 12:18:19 +0200
message:
  Use all H components in pdos3g/3k
  
  The '2' and '6' (imaginary) components of H were not used to build
  the dense Hamiltonian prior to diagonalization in pdos3g/pdos3k.
------------------------------------------------------------
revno: 894 [merge]
author: Nick Papior <nickpapior@gmail.com>
committer: Alberto Garcia <albertog@icmab.es>
branch nick: 4.1
timestamp: Wed 2018-04-18 11:57:19 +0200
message:
  Clarified sign of S phase factors in pdos routines
  
  Now comments explain why the pdos*k routines used a different sign in
  the S(k) generation when performing the matrix multiplications.
  
  This commit introduces nothing but clarified code and a slight
  performance increase due to removal of a small array and lots of
  copying.
------------------------------------------------------------
revno: 893
committer: Alberto Garcia <albertog@icmab.es>
branch nick: 4.1
timestamp: Tue 2018-04-17 15:06:00 +0200
message:
  Further control over the output of orbital magnetic moments
  
  For spin-orbit calculations, the orbital magnetic moments are only
  printed if the flag WriteOrbMom is set to .true.. Routine 'moments'
  has been slimmed down to remove the spin part, already done in
  'mulliken', and the moments themselves and not the angular momenta are
  printed.
  
  If MullikenInScf is .true., the information is printed at each scf step.
------------------------------------------------------------
revno: 892 [merge]
committer: Alberto Garcia <albertog@icmab.es>
branch nick: 4.1
timestamp: Tue 2018-04-17 12:19:49 +0200
message:
  Merge r566 (mulliken population fix in noncoll case)
------------------------------------------------------------
revno: 891 [merge]
author: Nick Papior <nickpapior@gmail.com>
committer: Alberto Garcia <albertog@icmab.es>
branch nick: 4.1
timestamp: Sun 2018-04-15 01:17:10 +0200
message:
  Merge r565 from 4.0 (i-PI 'EXIT' handling)
------------------------------------------------------------
revno: 890 [merge]
committer: Alberto Garcia <albertog@icmab.es>
branch nick: 4.1
timestamp: Sun 2018-04-15 01:14:53 +0200
message:
  Merge r563-564 from 4.0 (patchlogs and some docs)
------------------------------------------------------------
revno: 889 [merge]
committer: Alberto Garcia <albertog@icmab.es>
branch nick: 4.1
timestamp: Wed 2018-04-11 14:04:08 +0200
message:
  Merged r562: spin monitoring + util for sign flip in pre-4.0.2 nc DMs
  
  Note cosmetic change: when requested, the mulliken populations during
  the scf cycle are printed *after* the summary line that gives the energies
  and diffs in the step.
------------------------------------------------------------
revno: 888 [merge]
committer: Alberto Garcia <albertog@icmab.es>
branch nick: 4.1
timestamp: Mon 2018-04-09 23:33:05 +0200
message:
  Merged r558-561: JSON timing; NRTAB compatibility switch; no's in CML
------------------------------------------------------------
revno: 887
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Mon 2018-04-09 14:39:44 +0200
message:
  Bug-fix on double allocation of variable in sparsity_handling
  
  Also added file-size estimation to TBT.nc/TBT.SE.nc files.
------------------------------------------------------------
revno: 886
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Sun 2018-04-08 16:01:33 +0200
message:
  Fixed print-out in TBtrans for only the IO-node
------------------------------------------------------------
revno: 885 [merge]
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Sat 2018-04-07 21:19:29 +0200
message:
  Added tiling to the electrodes, and speeded up pivoting (heavily)
  
  Performance improvements on pivoting schemes and initialization
  in tbtrans.
  
  The tiling mechanism has been implemented. It is much faster
  than repetition due to simpler loops.
------------------------------------------------------------
revno: 884
fixes bug: https://launchpad.net/bugs/1751723
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Thu 2018-04-05 08:30:49 +0200
message:
  Fixed lp:1751723, LDAU variables not initialized on ion* reads
  
  The LDAU projector variables that denote how many there are
  were not initialized. Now they are explicitly set.
  
  Also ensured that the pseudo-potential type is properly initialized.
------------------------------------------------------------
revno: 883
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Wed 2018-04-04 15:22:33 +0200
message:
  Fixed bug on non-NCDF tbtrans compilation
  
  And enabled BTD optimization on ending blocks.
  This should actually make *all* BTD guesses the same.
  So perhaps we should revise some of the algorithms again.?
------------------------------------------------------------
revno: 882
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Tue 2018-04-03 21:40:25 +0200
message:
  Fixed non-equilibrium contour in the au_100_0.25 test
  
  I was missing +- 5 kT in the blocks.
------------------------------------------------------------
revno: 881
committer: Alberto Garcia <albertog@icmab.es>
branch nick: 4.1
timestamp: Sun 2018-04-01 00:36:01 +0200
message:
  Use the correct spin dimensions in mulliken routine (4.1)
  
  The 'mulliken' routine used formerly an argument 'nspin'
  that was handled internally as ranging only from 1 to 4. Thus
  SOC calculations would not trigger any output. This has been fixed.
  
  Also, requests for mulliken output during all steps of the scf cycle
  (triggered by 'mulliken-in-scf T') now produce mulliken output in the
  SOC case (which also calls the 'moments' routine to print an approximation
  to orbital moments).
------------------------------------------------------------
revno: 880 [merge]
committer: Alberto Garcia <albertog@icmab.es>
branch nick: 4.1
timestamp: Sat 2018-03-31 23:57:17 +0200
message:
  Fix some non-collinear spin issues
  
  * The computation of Ebs and EHarris was faulty for non-coll
    spin. This did not affect the total energy.
  
  * Gamma-point calculations gave an incorrect y-component of the spin
    due to a sign convention problem in the building of the DM from the
    eigenvectors.  The 'diag2g' and 'diag2k' routines now follow more
    closely the structure of the 'diag3g' and 'diag3k' routines.
  
    ( + some minor fixes related to spin dimensions in I/O routines)
    ( + addition of 'print_spin' output when mulliken-in-scf is requested)
    ( + mulliken-in-scf done in 'mixer' only if mixing the DM)
    
------------------------------------------------------------
revno: 879
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Thu 2018-03-29 12:11:43 +0200
message:
  Fixed init_consecutive with range when the range has zero entries
  
  Also heavily speeded up the level_structure algorithm by removing in_rgn
  calls.
  
  Cleaned up the valid_tri and added keyword for initial BTD block guess,
  also added this to the documentation.
  
  Fixed a bug in updating the cumultative sum parts. This happened for the
  first block only but cascaded through.
  
  Removed an unnecessary call in full_even_out
------------------------------------------------------------
revno: 878
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Wed 2018-03-28 10:44:47 +0200
message:
  Forgot to add integer memory consumption for the sparse arrays
------------------------------------------------------------
revno: 877
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Wed 2018-03-28 09:50:09 +0200
message:
  Improved memory print-out, no code change
------------------------------------------------------------
revno: 876
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Tue 2018-03-27 20:10:28 +0200
message:
  Moved even-out to after valid_tri
  
  This is necessary if the initial BTD is wrong. In that case it makes no sense to
  even-out the blocks.
  
  Also reduced the search space by trying to optimize the loop parameters.
  Now the initial guess 95% of the min bandwidth within the first connections.
  The stepping is 1% of the min bandwidth.
  The max is 105% of the max bandwidth within the first connections.
------------------------------------------------------------
revno: 875
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Tue 2018-03-27 15:34:40 +0200
message:
  Speeded up pivoting and block finding algorithms, also corrected a memory print-out
  
  I think we are approaching a final stage in the speedup for extreme TB calculations.
  The performance is rather good now. Still takes time in the trimat setup because
  it "tries" lots of different BTD block-sizes. This should probably be changed such
  that it stops guessing as soon as the final block size doesn't match.
  
  Speeded up a region Bcast when Nodes == 1.
  
  valid_tri and full_even_out should still be optimized...
------------------------------------------------------------
revno: 874
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Mon 2018-03-26 21:52:10 +0200
message:
  Speeded up connectivity graph pivoting method
  
  Instead of having two lists of elements to check, we now have a boolean
  array. In fact, many in_rgn could proably be changed to simple logical arrays
  with minor overhead and large performance gains.
------------------------------------------------------------
revno: 873
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Mon 2018-03-26 21:06:35 +0200
message:
  Speeded up rgn2trimat routines by allocating some temporary arrays
  
  This means that even for extreme amounts of BTD blocks it is very fast.
  Now the slow part is again the pivoting scheme.
------------------------------------------------------------
revno: 872
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Mon 2018-03-26 14:12:45 +0200
message:
  Bugfix for multiple variable usages in the NetCDF output
------------------------------------------------------------
revno: 871
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Mon 2018-03-26 10:42:36 +0200
message:
  Amend last commit with a note in the doc
------------------------------------------------------------
revno: 870
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Mon 2018-03-26 10:16:58 +0200
message:
  OpenMP info only for later versions
------------------------------------------------------------
revno: 869
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Mon 2018-03-26 10:06:50 +0200
message:
  Bugfix for very large systems
  
  tbtrans/transiesta quits if the total number of elements is
  above the integer limit.
  
  Clarified a few things in the pivoting with fan/front options.
  
  Add OMP print-out of the binding (prefer binding threads)
  
  Cleaned a few memory leaks in init_cdf routines.
  
  Speeded up cdf2ascii when many orbitals are present.
  
  Added pivot and BTD tables to the electrode down-folding regions.
------------------------------------------------------------
revno: 868
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Fri 2018-03-23 22:25:57 +0100
message:
  Bugfix for fan/front options in pivoting schemes
  
  Fixed bug with respect to the specialized pivoting schemes.
  There were incorrect de-allocations.
  
  Also updated analyzation to print-out in GB.
------------------------------------------------------------
revno: 867
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Fri 2018-03-23 15:04:28 +0100
message:
  Bugfix for very large orbitals in tbtrans and in rgn_push routine
  
  Clarified some OMP statements.
  Made sure that tbtrans can correctly create a BTD for no>2.6e6.
  
  Also made sure that the faster_parts does not overflow.
  
  We may still run into problems if the total number of elements
  is > 2,147,483,647 ~ 32 Gb per BTD matrix.
  Currently this is our limit!
------------------------------------------------------------
revno: 866
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Fri 2018-03-23 11:53:52 +0100
message:
  Lua-interactive, line-ending ; runs, bug-fix for deallocation
  
  Now interactive runs are executed if a line ends with ;.
  
  Fixed a double de-allocation.
  
  Fixed several table send/receives in one table.
------------------------------------------------------------
revno: 865
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Fri 2018-03-23 11:38:00 +0100
message:
  Bugfix in rgn_orb2atom
  
  The initial set atom was not put into the update list.
------------------------------------------------------------
revno: 864
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Fri 2018-03-23 11:14:28 +0100
message:
  Large speed up in certain pivoting algorithms
  
  Now the sorting of a pivoting array is much faster.
  This reduces the overhead of initialization of tbtrans to
  a minimum.
  I have also removed the constraint that some rgn_sp*
  routines enables distributed computing. Not necessary (and
  never checked).
  
  Added a rgn_grow routine which only re-initializes a region
  if there is not room for the new size.
  
  Allowed rgn_uniq to be in-place (i.e. no re-allocation, simply
  reducing r%n to the unique values).
------------------------------------------------------------
revno: 863
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Fri 2018-03-23 09:38:08 +0100
message:
  Fixed binary search for a simpler code
  
  The binary search is now as fast as my own search implementation.
  However, my search is still a little faster, so we keep it.
------------------------------------------------------------
revno: 862
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Fri 2018-03-23 09:27:56 +0100
message:
  Yet, yet another huge speed up for very large systems in transiesta and TBtrans
  
  The index function for BTD matrices was extremely slow for large systems.
  Now, instead of looping blocks we search for the orbital index.
  This should be much faster.
------------------------------------------------------------
revno: 861
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Thu 2018-03-22 20:07:58 +0100
message:
  Yet another huge speed up for very large systems in TBtrans
  
  TBtrans was using a huge amount of time on trying to create the
  connectivity graph due to some of the rgn_sp_* routines.
  I have now reworked them so they use slightly more memory, but
  are much much faster!
  This means that initialization of very big systems are almost
  negligeble.
------------------------------------------------------------
revno: 860
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Thu 2018-03-22 11:43:42 +0100
message:
  Huge speed up for very large systems in TBtrans
  
  TBtrans was using a huge amount of time on trying to even-out
  the BTD blocks. Now I have reworked this routine and it is *much* faster.
  
  This means that the "speed" method has changed to not start from the
  largest values and doing it like that. Searching for the largest element
  is extremely slow and is killing performance.
  Now there are two routines:
  
    diff_mem / diff_perf
  
  which compares two BTD matrices and returns a difference number
  in terms of their memory/performance, respectively. These
  are now used instead and should also work without doing
  overflows.
  
  All tbtrans: names has been changed to tbt: TODO consider changing
  to specific names depending on their parts.
  
  Enabled associating a region with a list.
------------------------------------------------------------
revno: 859
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Wed 2018-03-21 11:52:58 +0100
message:
  Fixed length check for -HS in tbtrans
  
  It is a minor thing and probably works anyway for most
  compilers.
------------------------------------------------------------
revno: 858
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Wed 2018-03-21 10:01:22 +0100
message:
  Fixed charge mixing with transiesta
  
  When performing charge mixing with transiesta the history
  is now correctly reset.
  
  Secondly, the Lua hooks for the mixing weights are now also correct
  for charge mixing.
------------------------------------------------------------
revno: 857
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Tue 2018-03-20 11:17:56 +0100
message:
  Forgot to deallocate dictionary
------------------------------------------------------------
revno: 856
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Tue 2018-03-20 11:11:37 +0100
message:
  Enabled multi-line prompt and ; for /run replacement
------------------------------------------------------------
revno: 855
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Tue 2018-03-20 11:01:00 +0100
message:
  Enabled full table retrieval using siesta.receive({'SCF'})
  
  Much easier although it probably fetches too much. This is the users
  responsibility!
------------------------------------------------------------
revno: 854
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Tue 2018-03-20 10:41:59 +0100
message:
  Lua interactive mode added /show and /clear codes
  
  Show the currently collected lines of code via /show
  Clear the currently collected lines of code via /clear
------------------------------------------------------------
revno: 853
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Mon 2018-03-19 22:05:21 +0100
message:
  Enabled interactive Lua runs (thanks to Alberto Garcia)
  
  The Lua framework has been extended to allow user-defined code
  to be runned at each state. I.e. the user can request information
  and print information etc. They can however interact with the Lua code
  as they wish.
  
  There are various ways of communicating with the interactive session:
  
  /debug
    turn on/off debugging
  /run
    run the currently collected lines of code, then continue
    collecting codes
  /cont
    run the currently collected lines of code and continue the
    siesta run
  /stop
    run the currently collected lines of code and stop all
    future interactive sessions.
  
  Note *any* Lua code is valid in this scheme.
  
  For instance:
  
  LUA> siesta.receive({'geom.xa'})
  LUA> xa = siesta.geom.xa
  LUA> print(xa[1][1], xa[1][2], xa[1][3])
  LUA> /run
  LUA> print(xa[2][1], xa[2][2], xa[2][3])
  LUA> /cont
  
  will communicate with Siesta, receive the coordinates,
  print-out the first atoms coordinate (in Bohr), then run the code
  and lastly, print-out the second atoms coordinate.
  
  Alberto Garcia did the initial work and Nick added more features.
------------------------------------------------------------
revno: 852
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Tue 2018-02-27 22:03:50 +0100
message:
  Fixed transiesta buffer reads from lists
  
  When reading buffer atoms from a list, the buffer atom
  types were not propagated to the arrays. I.e.
  it would crash if using TS.Atoms.Buffer [ ... ].
  This should be fixed now.
  
  This commit also fixes some minor issues related to fdf and
  integer precision specifications.
------------------------------------------------------------
revno: 851
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Tue 2018-02-27 20:58:02 +0100
message:
  Fixed transiesta tests to conform to the new binary
  
  As transiesta is part of siesta, the transiesta tests
  are easier because no double compilation is necessary.
------------------------------------------------------------
revno: 850
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Tue 2018-02-27 15:11:14 +0100
message:
  Updated documentation with extra mentions of sisl
------------------------------------------------------------
revno: 849
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Tue 2018-02-27 15:03:49 +0100
message:
  Maintenance of total-spin calculations
  
  Now the variables conserning the Total-spin configuration are stored
  along side the regular data (i.e. Qtot in atomlist now also has
  Qtots). This makes it easier to figure out the internal logic.
  
  Renamed ts variable (total spin) to total_spin for clarity and
  to not confuse with transiesta related stuff. Possibly other
  variables with 2 letters should be renamed (tp, tt, etc.)
  
  A bugfix regarding spin-spiral has been fixed. A reference to an
  unallocated element was wrong.
------------------------------------------------------------
revno: 848
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Thu 2018-02-22 14:28:36 +0100
message:
  Bugfix for user-defined Poisson
  
  Now it reads correct, and the error message is *much* clearer!
------------------------------------------------------------
revno: 847
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Tue 2018-02-20 14:46:13 +0100
message:
  Updated year of sisl reference
------------------------------------------------------------
revno: 846 [merge]
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Mon 2018-02-19 10:09:31 +0100
message:
  Merged r556-557, merged fmpdos and NRTAB fix
------------------------------------------------------------
revno: 845
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Fri 2018-02-16 21:35:58 +0100
message:
  Removed setup_kscell, it was not used
------------------------------------------------------------
revno: 844
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Tue 2018-02-06 18:39:42 +0100
message:
  Fixed conv.lua in flos_h2o_meshcutoff test
  
  The starting Meshcutoff was not the intended.
  And the table was not producing easy to interpret data.
------------------------------------------------------------
revno: 843
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Thu 2018-02-01 13:29:11 +0100
message:
  Fixed dep_all.sh script to always update dependencies
  
  When merging from previous branches dep_all.sh would not work
  because of format errors in Makefiles. This is now fixed.
------------------------------------------------------------
revno: 842 [merge]
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Thu 2018-02-01 12:04:12 +0100
message:
  Merged r554-555, merged PDOS Ef addition
------------------------------------------------------------
revno: 841
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Wed 2018-01-31 14:45:29 +0100
message:
  Fixed erroneous entry in the manual for Geometry constraints
------------------------------------------------------------
revno: 840
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Tue 2018-01-30 20:36:08 +0100
message:
  Added notice in Util/TS/TB folder to point to sisl
------------------------------------------------------------
revno: 839
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Tue 2018-01-30 10:12:48 +0100
message:
  Updated release script
  
  It may be advantegeous to also ship sha* checksums.
  Now the release script creates one additional file with
  all released files checksums, md5, sha256 and sha512.
  In that way it becomes easier to check with conda builds etc.
------------------------------------------------------------
revno: 838
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Fri 2018-01-26 14:17:30 +0100
message:
  Clarified slab-dipole corrections for transiesta calculations
  
  Now the slab-dipole correction seems to be more consistent with the
  semi-infinite leads.
  
  1) Any electric field along the semi-infinite directions is not
     allowed.
  2) Any dipole correction will be added perpendicular to the semi-infinite
     directions.
     However, for 1 electrode we *only* allow a correction along the single
     semi-infinite direction. This is perhaps not the best method. But it
     resembles that the system indeed is a slab along that direction.
  
  In any case, the dipole correction still needs to be turned on manually.
  
  Also, a long standing dhscf_init bug has finally been fixed.
  When running transiesta MD calculations it is important to update coordinates
  and indices for the grid. Hence the initializations has to be done
  after each MD step.
------------------------------------------------------------
revno: 837
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Thu 2018-01-25 21:01:19 +0100
message:
  Fixed Lua-flook interaction when supercell changes through MD
  
  When the supercell changes, so does the internal variables such
  as xa, etc. In that case we *have* to re-establish the pointers
  to the dictionary connecting Lua. This should now be fixed in
  state_init after the superc call.
  
  When doing this I also found out that several of the arrays where
  written as the full arrays (na/o_s) which was never the intent.
  Now only na/o_u elements are stored.
------------------------------------------------------------
revno: 836
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Tue 2018-01-16 13:51:55 +0100
message:
  Added TS.Elec.<>.Hartree.Extend to the manual
  
  Also changed the behaviour by making it a length from the electrode.
  
  Clarified a few things in the manual and updated links.
------------------------------------------------------------
revno: 835 [merge]
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Thu 2018-01-04 19:48:03 +0100
message:
  Merged r553, merged PDOS ParallelOverK fix
------------------------------------------------------------
revno: 834 [merge]
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Thu 2018-01-04 15:41:41 +0100
message:
  Merged r552, merged PDOS test for gamma
------------------------------------------------------------
revno: 833 [merge]
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Sat 2017-12-30 19:48:51 +0100
message:
  Merged 4.1-ts-int.
  
  Now transiesta is intrinsic to the siesta exectuable.
  
  This has meant relatively few changes.
  
  The main difference is the fact that transiesta solution
  method is accessible in the siesta executable.
  
  When running electrode calculations one can now do either:
  
    siesta --electrode
  or
    TS.HS.Save True
    TS.DE.Save True
  
  which are equivalent.
  
  In the full life of 4.1 the transiesta executable
  is still accessible, the only difference between siesta
  and transiesta is that transiesta is equivalent to
    siesta --electrode
  
  Other than that there are few changes to the code.
  A general update of the documentation has been carried out
  through this merge.
------------------------------------------------------------
revno: 832 [merge]
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Sat 2017-12-30 19:06:18 +0100
message:
  Merged r550-551, merged PDOS updates
------------------------------------------------------------
revno: 831
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Fri 2017-12-22 11:33:21 +0100
message:
  Changed defaults of common options
  
  The defaults for:
  
  MeshCutoff has been increased from 100 to 300 Ry
  MaxSCFIterations has been increased from 50 to 1000
  SCFMustConverge is now true, i.e. Siesta will default to die
  upon the first MD-step where self-consistency is not reached.
------------------------------------------------------------
revno: 830 [merge]
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Fri 2017-12-22 11:26:20 +0100
message:
  Merged r548-549, ion.nc read/writes (final)
------------------------------------------------------------
revno: 829 [merge]
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Mon 2017-12-18 09:42:20 +0100
message:
  Merged r547, ion.nc read/writes
------------------------------------------------------------
revno: 828
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Fri 2017-12-15 15:13:16 +0100
message:
  Added ghost to siesta.nc files
  
  Now the Ghost atom orbital information is also saved in the
  siesta.nc file. Upcoming fix should also include the ghost.ion.nc
  files by simply neglecting the KB-projectors.
  
  Bugfix for the latest commit.
------------------------------------------------------------
revno: 827
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Fri 2017-12-15 14:02:59 +0100
message:
  Bugfix for Lua runs without a Lua-file
  
  When one requests a Lua MD type-of-run it would continue
  to run the same MD-setup if no Lua file was present.
  This is now fixed by killing siesta if no lua file is present.
------------------------------------------------------------
revno: 826 [merge]
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Fri 2017-12-15 11:34:49 +0100
message:
  Merged r546, Bessel ion-writes
------------------------------------------------------------
revno: 825
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Tue 2017-12-12 10:13:49 +0100
message:
  Bugfix in openmp statement hared => shared
------------------------------------------------------------
revno: 824
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Tue 2017-12-12 09:11:00 +0100
message:
  Cleaned up mumps usage in transiesta
  
  Made more tests with the latest 5.1.2 version. However, I am
  quite surprised at its slow performance for small systems.
------------------------------------------------------------
revno: 823
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Tue 2017-12-12 08:50:52 +0100
message:
  Bugfix for intel compilation with flook and NCDF_4
  
  Apparently intel does not allow the use statement of the dictionary.
  Sigh.
------------------------------------------------------------
revno: 822
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Mon 2017-12-11 10:24:54 +0100
message:
  Bugfix for non-filled energy points using the MUMPS solver.
  
  This was due to fake energy points having zero energy meaning
  that no imaginary part was present.
------------------------------------------------------------
revno: 821
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Fri 2017-12-08 10:18:52 +0100
message:
  Updated RELEASE_NOTES and documentation
------------------------------------------------------------
revno: 820
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Thu 2017-12-07 22:13:32 +0100
message:
  Made index_Gf easier in Gf-DOS calculations
  
  Now the index_Gf is contracted to a single
  subroutine which retrieves:
  
     Gf - Gf^\dagger
  
  This is much more efficient and should provide some speedup
  for big systems.
------------------------------------------------------------
revno: 819
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Thu 2017-12-07 21:59:23 +0100
message:
  Fixed a long-standing issue related to Gf-DOS
  
  Since the old tbtrans the DOS from the Green function has
  been calculated using:
  
     -Im[Tr[Gf.S]] / Pi
  
  while it actually should be calculated as:
  
     -Im[Tr[ (Gf-Gf^\dagger).S]] / (2Pi)
  
  to correctly handle k-point calculations.
  Essentially this will typically not result in differences
  because the k-averaging would sort these errors out (if
  time-reversal symmetry was not applied). In other cases
  it could have an effect, albeit small.
  
  One can check that the summed ADOS_k == DOS_k which should
  always hold. Secondly, this should also be enforced for the
  COOP and COHP analysis. I have checked this with sisl and
  they hold.
  
  I haven't tested the dH COHP curves, but suspect them to
  work, currently I am issuing a warning which should be tested
  against, i.e. sum(COHP_A) = COHP_Gf would make a great addition
  here as well.
  
  Since COOP and COHP are the same calculation I have cleaned
  up the code by limiting to GF_COP and A_COP routines which
  works either by passing S or H as the sparse matrix multiplication.
------------------------------------------------------------
revno: 818
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Wed 2017-12-06 14:43:43 +0100
message:
  Updated documentation to reflect the fixes in COOP and COHP curves
------------------------------------------------------------
revno: 817
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Wed 2017-12-06 14:12:52 +0100
message:
  Bug fixed for COOP and COHP curves in tbtrans
  
  Since they reflect the DOS they should be calculated as Gf_ij S_ji as would
  a normal DOS calculation. I.e. the papers describing COOP and COHP curves are only
  considering the Gamma-point. I have checked that this is indeed correct by
  using sisl and everything in full matrices.
  
  Also ensured that J, COOP and COHP are initialized to 0 which could be important with
  dH calculations.
  
  It should be noted that sum(COOP) == total-DOS.
------------------------------------------------------------
revno: 816 [merge]
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Tue 2017-12-05 16:16:36 +0100
message:
  Merged r545
------------------------------------------------------------
revno: 815
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Tue 2017-12-05 14:16:45 +0100
message:
  Added COOP and COHP for tbtrans
  
  Now tbtrans can calculate COOP and COHP curves. This is stored in much the same spirit as the
  orbital-current due to the same sparsity pattern. Indeed this analysis does not make
  sense for orthogonal basis. However, there is no check for this.
  
  Basically the COOP curves are calculated as:
  
     COOP_ij = - Im[Gf_ij * S_ij] / Pi
     COOP_ij = Re[A_ij * S_ij] / 2Pi
  
  and the COHP curves are calculated as
  
     COHP_ij = - Im[Gf_ij * H_ij] / Pi
     COHP_ij = Re[A_ij * H_ij] / 2Pi
  
  Currently the COOP/COHP curves are untested but are (hopefully) correct.
  They are also implemented for dH calculations.
  
  Manual has been updated to reflect these changes.
  
  To make COOP work smoothly I have generalized the cdf_save function of the
  orbital current to make it work for all 3 cases (orb-current, COOP, COHP).
------------------------------------------------------------
revno: 814
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Mon 2017-12-04 10:12:38 +0100
message:
  Cleaned up test names, now the system-label are correct in regards of tests
  
  Many of the new tests where not consistent in naming scheme, SOC_* and flos_*.
  This has now been fixed.
  
  Minor changes to the documentation, allowing for <|> notations.
  
    \bra{...} => <...|
    \ket{...} => |...>
    \bk{1}{2} <1|2>
    \kb{1}{2} |1><2|
------------------------------------------------------------
revno: 813
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Wed 2017-11-29 10:29:42 +0100
message:
  Speeded up self-energy storing by removing reshape calls
  
  Instead of reshaping before calling put_var, we might as well
  trick a pointer to the correct shape and then use that directly.
  
  This should speed up storing large self-energies considerably because
  no stack-arrays are being created.
------------------------------------------------------------
revno: 812
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Tue 2017-11-28 18:37:32 +0100
message:
  Added blocks for BTD into the output files
  
  Having the block-sizes enables efficient handling if
  wanting to do BTD in sisl. This now because really easy as the
  block-sizes are known (with regards to the device pivot table).
------------------------------------------------------------
revno: 811
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Wed 2017-11-22 15:00:38 +0100
message:
  Removed unneeded variable in m_ts_electrode, clarified loops in m_tbt_tri_scat
  
  The current DOS calculation is now correct since there was a mistake.
  This has now been checked against a small sisl code.
  
  Thanks to Bernhard Kretz for making me aware of this.
------------------------------------------------------------
revno: 810
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Tue 2017-11-21 14:53:04 +0100
message:
  Speeded up DOS calculations in TBtrans
  
  The calculation of the DOS was performed by looping BTD entries which
  is far from optimal when performing large scale calculations.
  For now we have reverted to the sparse matrix looping and extraction of
  the index from a function call.
  
  This is implemented both in GF_DOS and A_DOS and so far it seems to be twice
  as fast. The other benefit is a better OMP parallelization.
  
  Also fixed a compilation problem without NCDF.
  
  Added a new routine in TriMat to extract index in sub-matrix plus submatrix.
------------------------------------------------------------
revno: 809
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Mon 2017-11-20 11:59:35 +0100
message:
  Clean-up in manual, MaxSCFIterations are now increased to 200.
  
  Fixed many inconsistencies in the manual, now there should be no
  duplicate entries.
  Also removed \over calls.
  
  Enabled arguments for fdf-flags:
    \fdf{Label:arg}
  which will create a link to an fdfoptions \option[arg] if
  fdfindex*{Label:arg}.
------------------------------------------------------------
revno: 808
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Sun 2017-11-19 21:18:39 +0100
message:
  Reverted an old change in the electrostatics for N-electrode box solutions
  
  In 391.1.642 I changed the algorithm from the in_box to square grids which
  meant that the box functionality was *only* working for Cartesian lattice
  vectors. This has been reverted.
  Secondly the loop has been reduced to only check where the electrode has points.
  
  One of the problems with the old implementation was the extremely bad
  performance due to numerous calls of dgesv routine. Instead the m_geom_box
  now calculates the inverse of the box-vectors and then multiplies to get
  the solution. This makes it perform MUCH faster.
  
  The electrode was using this box method and thus is now much faster.
  
  Removed some die calls in init_Elec_sim and moved to ts_warnings
  to make it compatible with N-electrode calculations. Say N-electrode
  calculations with Gamma-only don't really care about non-conforming
  pivoting of electrode lattice vectors.
  
  Thanks to Thomas Frederiksen for bringing this to my attention.
------------------------------------------------------------
revno: 807
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Fri 2017-11-17 21:53:23 +0100
message:
  Updated Fermi-update, more aggressive when Fermi correction is always pos/neg
  
  When the fermi update method always starts with missing/additional charge we
  are now more aggressive in the search for the best E_F. It speeds up in
  the simpler cases, but perhaps is too violent in the difficulter ones.
  
  Also allowed dEf to be performed from Lua by passing down the current charge
  to lua. Then one can always change Ef to fit dQ. Hence one can optimize the algorithm
  by system.
  
  Fixed timers when compiling with timers for transiesta fermi-correction.
  
  Added a module dm_charge which simply calculates the total charge via [DM*S]. Its low
  overhead makes it suitable to be calculated per SCF.
------------------------------------------------------------
revno: 806
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Wed 2017-11-15 15:33:37 +0100
message:
  Fixed origin displacement (should be half the interlayer spacing)
  
  This has no influence on computations.
------------------------------------------------------------
revno: 805
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Mon 2017-11-13 08:41:00 +0100
message:
  Fixed pivoting GGPS and many small nuances of the pivotings
  
  Now the pivoting works with the generalized connectivity-graph (CG).
  This has offloaded some things to the m_pivot_methods.F90 code and
  should provide a better basis.
  
  Added only_sub to the pivot_methods to allow sub-graph pivoting, this
  is mainly intended for tbtrans downfolding regions where electrodes regions
  are disconnected graphs.
  
  Added error calls when the pivoting scheme does not contain all elements.
  
  A couple of fixes in m_region, initialization in consecutive and sort.
  
  Fixed exposing electrode orbitals in tbtrans (o_inD required all orbitals).
  
  Added print-out of suggested pivoting scheme. This is however a suggestion as
  it is only based on the lowest memory usage.
  Secondly, the output of TS.Analyze has been greatly reduced.
  
  TODO adapt the new level-structure type in GGPS.
------------------------------------------------------------
revno: 804
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Thu 2017-11-09 20:28:59 +0100
message:
  Fixed a_dev in TBT.SE files (sorted) and also fixed issue with MPI-IO
  
  Now the TBT.Proj and TBT.SE files have their own open routine which is
  simply a copy. But it allows a finer tuning.
  
  Fixed warnings when sigma-only and fixed a bug regarding elec-dos and sigma-only.
  
  Speeded up SE writes because we now keep the file-handle open.
  
  Added generalized option for connectivity graphs. We should consider
  doing this also for all other options. I.e. the fan-options probably
  require a more specific pivoting routine.
  
  Fixed wrong default in the manual of the cross-term updates, they are
  cross-terms, but none was specified as the default.
------------------------------------------------------------
revno: 803
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Wed 2017-11-08 14:57:52 +0100
message:
  Removed redundant print-out of the transiesta begin
  
  Now an MD simulation with transiesta does not print-out
  WELCOME TO transiesta on every step
------------------------------------------------------------
revno: 802
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Wed 2017-11-08 10:46:44 +0100
message:
  Bugfix for tbtrans analyzation
  
  Now the analyzation works for tbtrans.
  
  Sp_union was also immensely speed up which really makes analysis
  much faster.
  
  Currently the different connectivity graphs are not fully implemented
  but this should be done.
------------------------------------------------------------
revno: 801
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Wed 2017-11-01 13:25:17 +0100
message:
  Bugfix for memory-allocation names
  
  In diagonalizeHk a nullification of Haux, Saux was creating
  a memory leak.
  This should now be fixed.
  
  Also fixed lots of names in de_alloc to prevent reports of
  non-valid use.
  
  When transiesta starts it will immediately deallocate the dense matrices
  to limit memory usage. Since all methods should ensure a correct
  allocation then it shouldn't matter.
------------------------------------------------------------
revno: 800
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Tue 2017-10-31 16:23:27 +0100
message:
  Finally added tbtrans analyze code, many small fixes
  
  Finally TBT.Analyze analyzes nearly all pivoting methods and enables
  easier determination of the pivoting method.
  
  By default enable the creation of Graphviz tables (no need to add flags).
  Also added documentation in manuals.
  
  Small speedup in the analyzation step on the electrode connectivity graphs
  by using rgn_push instead of append
  
  Removed a few unused variables (nothing should be affected).
  
  Changed DOS calculations in tbtrans to add prefactor in the loop (OMP) instead
  of branching a new OpenMP region again (currently untested but the change
  was so small)
------------------------------------------------------------
revno: 799 [merge]
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Mon 2017-10-30 16:59:05 +0100
message:
  Merged r544
------------------------------------------------------------
revno: 798
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Mon 2017-10-30 15:47:27 +0100
message:
  Ensured k-points are in output of tbtrans
  
  Now Gamma point calculations also add the k-point information to the
  NetCDF files. This should help sisl comprehend things more easily.
  
  Added check for TBT.Atoms.Device block/list to not print-out stuff
  in the warnings block.
  
  Allowed -atom in block to be equivalent as not-atom.
------------------------------------------------------------
revno: 797
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Mon 2017-10-30 10:55:26 +0100
message:
  Fixed reading a list of length 1, also improves error messages
  
  Fixed reading a list of length 1, fixed reading more than 1 list
  on a single line.
------------------------------------------------------------
revno: 796
committer: Alberto Garcia <albertog@icmab.es>
branch nick: 4.1
timestamp: Thu 2017-10-26 12:42:57 +0200
message:
  Allow passive species in SOC calculations
  
  In previous versions of the code all species had to contribute to the
  spin-orbit part of the Hamiltonian. This has been relaxed, and there
  is code to check that at least one species contributes.
  
  In the output file there is a new section on SOC setup. The old line
  with the confusing message "spin-orbit components not used" has been
  removed.
------------------------------------------------------------
revno: 795
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Tue 2017-10-24 15:14:57 +0200
message:
  Fixed missing dependencies in the Makefiles for ts2ts
  
  Also amended documentation of TBT.Atoms.Device.Connect.
  
  Fixed compilation of optical utility (VPATH should not
  be present).
------------------------------------------------------------
revno: 794
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Mon 2017-10-23 11:18:56 +0200
message:
  Fixed missing import in 793
------------------------------------------------------------
revno: 793
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Sun 2017-10-22 14:53:59 +0200
message:
  Updated documentation and check for energy when re-using contours
------------------------------------------------------------
revno: 792
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Fri 2017-10-20 11:41:10 +0200
message:
  Corrected warning print-out when using non-bulk electrodes
------------------------------------------------------------
revno: 791
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Thu 2017-10-19 21:27:43 +0200
message:
  Speeded up transiesta and tbtrans calculations
  
  Instead of using rgn_pivot we now pass the corresponding
  pivoting array to make it much faster when using "weird"
  pivoting schemes. This will speed up large calculations.
------------------------------------------------------------
revno: 790
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Thu 2017-10-19 20:33:34 +0200
message:
  Speeded up delta-calculations by using the pivoting table
  
  Instead of searching the pivoting table for the correct index
  we instead use the one-shoot pivot table to get the placement.
  This speeds up calculations (immensely)
  
  Currently, however, this is not enabled in the downfolding scheme
  because it would require N_elec X no_u arrays which for tight-binding
  calculations is around 4 MB per million elements per electrode.
  In those situations one might also use a very large device region
  because one needs bond-currents.
------------------------------------------------------------
revno: 789
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Wed 2017-10-18 18:26:48 +0200
message:
  Added compiler version to TBtrans
------------------------------------------------------------
revno: 788 [merge]
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Wed 2017-10-18 18:25:05 +0200
message:
  Merged r543
------------------------------------------------------------
revno: 787
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Sat 2017-10-14 21:37:46 +0200
message:
  Fixed erroneous analyzation integer for TS.Analyze
------------------------------------------------------------
revno: 786
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Sat 2017-10-14 20:19:37 +0200
message:
  Updated documentation for TS
------------------------------------------------------------
revno: 785
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Fri 2017-10-13 14:34:14 +0200
message:
  Fixed a_dev to be sorted when writing to the nc files
  
  This makes it easier for post-processing, and is very important.
  The pivot array is there for pivoting purposes. a_dev should not
  be responsible for this.
------------------------------------------------------------
revno: 784
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Fri 2017-10-13 10:38:50 +0200
message:
  Fixed print-out of timestamp and enabled --out for tbtrans
  
  Also added more information in case users "forget" to add arguments.
------------------------------------------------------------
revno: 783
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Fri 2017-10-13 10:21:35 +0200
message:
  Ensured that siesta information gets printed before fdf-stuff
  
  This has historically always been the case and it also makes it
  easier to debug.
  
  I have made a slight re-arrangement of code to implement this.
  The one downside is that the Nodes print-out will be there
  twice in case of PEXSI calls. This I think is an acceptable
  case.
------------------------------------------------------------
revno: 782
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Thu 2017-10-12 12:40:53 +0200
message:
  Made rgn_remove equivalent to complement by reversing arguments
  
  Also fixed issues where sorted could be passed through to the
  resulting tRgn. This should speed up across the use of these functions.
------------------------------------------------------------
revno: 781
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Wed 2017-10-11 09:44:41 +0200
message:
  Simplified the Cuthill-McKee algorithm
  
  Also added a sorting of the "start" elements in CM. This
  should ensure a more correct CM algorithm.
------------------------------------------------------------
revno: 780
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Wed 2017-10-11 09:13:51 +0200
message:
  Small speed up in pivoting methods
------------------------------------------------------------
revno: 779 [merge]
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Tue 2017-10-10 21:47:15 +0200
message:
  Merged r542
------------------------------------------------------------
revno: 778 [merge]
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Tue 2017-10-10 21:27:53 +0200
message:
  Merged r541
------------------------------------------------------------
revno: 777 [merge]
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Tue 2017-10-10 21:12:06 +0200
message:
  Merged r540
------------------------------------------------------------
revno: 776 [merge]
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Tue 2017-10-10 21:08:31 +0200
message:
  Merged r539
------------------------------------------------------------
revno: 775
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Tue 2017-10-10 21:03:12 +0200
message:
  Fixed pivoting in tbtrans
  
  For a very long time TBtrans has experienced sub-optimal pivoting
  compared to transiesta.
  This has now been fixed because the (dense) down-folded self-energies were
  not expanded in the sparse pattern that is searched when pivoting.
  This commit uses the correct sparse pattern.
  
  Secondly, this commit introduces a change to the PCG algorithm which
  in certain cases proves to be really efficient. It is slightly more
  costly than the GPS algorithm but may provide better pivoting.
  It has at least for some really big TB systems shown far superior handling.
------------------------------------------------------------
revno: 774
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Tue 2017-10-10 13:31:23 +0200
message:
  Minor change in the way the DE_NEGF is calculated
  
  Now we take the average of the charge per chemical
  potential because we do not know the actual partition of the
  chemical potential.
  Effectively this makes it easy to post-process.
  
  Also added DE_NEGF to the siesta dictionary.
------------------------------------------------------------
revno: 773
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Thu 2017-10-05 17:12:09 +0200
message:
  Added electrode quantities to TBT.nc output
  
  Added Bloch and eta per electrode.
------------------------------------------------------------
revno: 772
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Thu 2017-10-05 15:34:22 +0200
message:
  Fixed displacement for tbtrans, lp:1721479
  
  This tbtrans version does not exist in 4.0, hence the commit here.
------------------------------------------------------------
revno: 771
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Fri 2017-09-29 09:32:16 +0200
message:
  Changed default poisson ramp placement. It *should* be in central region
  
  This "bug" was introduced in r542 and was due to conversations with other
  personel in the field.
  Since I have now tested it to obtain the correct voltage drop I can assert
  that central should be the default (it also converges better).
------------------------------------------------------------
revno: 770
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Thu 2017-09-28 20:23:53 +0200
message:
  Fixed bug related to assigning the left-most electrode with the smallest bias
  
  A problem was occuring when defining the left-electrode with the lowest
  voltage.
  This was due to the voltage ramp was erronously setup.
------------------------------------------------------------
revno: 769
fixes bug: https://launchpad.net/bugs/1718162
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Wed 2017-09-27 15:56:46 +0200
message:
  Fixes lp:1718162 for PDOS for NC and SO for k-points
  
  The problem seem to have been fixed, confirmed by R.Robles.
  
  The error was that the wrong overlap matrix was used in the
  projection calculation.
  
  Also removed stack-allocation by moving Spr to a locally
  allocatable array. This should resolve intel problems with
  stack-allocation.
------------------------------------------------------------
revno: 768
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Mon 2017-09-25 14:53:09 +0200
message:
  Fixed delta reading when number of processors is too great
------------------------------------------------------------
revno: 767
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Thu 2017-09-21 19:27:50 +0200
message:
  Attempting to fix parallel pdos for non-colinear and spin-orbit
  
  An apparent error was the band index which was passed through
  LocalToGlobalOrb without notice. This is wrong because NC and SO
  have twice the amount of bands compared to the number of orbitals.
------------------------------------------------------------
revno: 766
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Tue 2017-09-19 15:08:34 +0200
message:
  Added charges when we need Lua scripts for changing species
  
  Now one can "change" the Datm array via Lua.
  One can also adapt the total charge, both electrons and proton charges.
  
  We haven't tested this with Lua, yet. But hopefully these ingredients are
  what is necessary.
------------------------------------------------------------
revno: 765
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Thu 2017-09-07 18:23:04 +0200
message:
  Added a write-out of all fdf-flags defined in the manual
  
  It is now easy to have a complete list of fdf-flags defined
  in the manual if so desired. The files \jobname.fdf gets created
  with each fdfentry element defined there.
------------------------------------------------------------
revno: 764 [merge]
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Thu 2017-09-07 13:53:22 +0200
message:
  Merged 4.0 r537-538
------------------------------------------------------------
revno: 763
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Thu 2017-09-07 13:37:35 +0200
message:
  Fixed compilation without NCDF_4 support
------------------------------------------------------------
revno: 762
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Thu 2017-09-07 12:55:01 +0200
message:
  Updated dH method to be a dH and dSE
  
  This is necessary to differentiate between delta elements contributing to
  the bond-currents (magnetic field) and which does not (complex absorbing potentials).
  
  This has meant a restructuring of the delta stuff and is now easier to follow,
  the dH/dSE codes are now extremely minimal due to a common interface.
  
  I have tested them against level 1-4 for both cases.
  Enabled print-outs of delta stuff for level > 7.
  
  Updated mat_invert MPI_IN_PLACE_RECURSIVE algorithm to reduce copies, it is still
  slower, but is good to have.
------------------------------------------------------------
revno: 761
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Tue 2017-09-05 11:02:36 +0200
message:
  Improved print-out for errors when performing MD calculations
  
  No code changes.
------------------------------------------------------------
revno: 760
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Mon 2017-09-04 21:01:36 +0200
message:
  Added COMP_LIBS to version.F90 output
  
  This is simply for information to always track the used libraries.
------------------------------------------------------------
revno: 759
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Mon 2017-09-04 14:34:13 +0200
message:
  When checking for transfer matrix we now only die if GF file isn't used
  
  I.e. if a user supplies an external GF file, and requests it be used, then
  transiesta/tbtrans now allows this but informs the user of said choice.
------------------------------------------------------------
revno: 758 [merge]
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Mon 2017-09-04 14:13:54 +0200
message:
  Merged 4.0 r535-536
------------------------------------------------------------
revno: 757
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Mon 2017-09-04 14:13:08 +0200
message:
  Removed an unnecessary line in SE calculation, for clarity
------------------------------------------------------------
revno: 756
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Tue 2017-08-29 11:47:24 +0200
message:
  Fixed a sign convention error in bond-currents
  
  I still have to check that dH does it correctly but
  I cannot see how it shouldn't.
  
  Note that since sisl 0.8.6 this is also fixed.
  The mistake was that in sisl 0.8.5 and prior the signs
  were wrong, so effectively all previous 4.1 releases and sisl
  0.8.5 showed the correct bond-currents. But now we have to correct
  the mistake.
------------------------------------------------------------
revno: 755
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Tue 2017-08-29 10:14:51 +0200
message:
  Added simple case of pivoting 1 no regions
  
  Now rgn2trimat works for 1-orbital systems.
------------------------------------------------------------
revno: 754
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Mon 2017-08-28 12:15:59 +0200
message:
  Removed unused variables in tbtrans
------------------------------------------------------------
revno: 753
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Mon 2017-08-28 12:09:50 +0200
message:
  Enabled tbtrans calculations with 1 orbital systems
  
  Now we may run calculations on *any* size systems. Before
  it could only run on systems with *at least* 2 orbitals per
  block. This has been leveraged now.
------------------------------------------------------------
revno: 752
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Fri 2017-08-25 22:19:23 +0200
message:
  Added new-line when using dH and changed tbtrans: to tbt:
  
  There is no code change.
------------------------------------------------------------
revno: 751
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Wed 2017-08-23 15:28:25 +0200
message:
  Changed internal Gamma array to be i (Sigma - Sigma^\dagger)^T
  
  Generically the scattering matrix (Gamma) is defined as:
    Gamma = i ( Sigma - Sigma^\dagger)
  however, before this commit the convention was:
    Gamma = ( Sigma - Sigma^\dagger) ^ T
  
  Now we use this convention:
    Gamma = i ( Sigma - Sigma^\dagger) ^ T
  
  1. The complex number i makes the scattering matrix Hermitian
  2. The transpose allows certain optimizations when calculating the
     transport (i.e. dot instead of matrix multiplications)
  
  I have re-runned all k-point sampled versions of MUMPS, full, BTD
  with and without bias (only bias should be important) and I have
  also checked TBtrans.
  The only thing missing for testing is the molecular projections
  for tbtrans. This should be tested (TODO). However, there it shouldn't
  matter because the Gamma are not re-calculated.
  
  I also found a bug when writing correction eigenvalues to ASCII,
  now it correctly only writes the k-averaged ones in AVCEIG.
------------------------------------------------------------
revno: 750 [merge]
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Tue 2017-08-22 17:27:39 +0200
message:
  Merged 4.0 r532-534
------------------------------------------------------------
revno: 749
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Tue 2017-08-22 17:09:30 +0200
message:
  Added total energy contribution from an open-boundary calculation.
  
  The total energy contribution is (grand canonical ensemble):
    Etot = Etot - e \sum_i N_i \mu_i
  where N_i is the number of particles being occupied from the i'th chemical
  potential, with chemical potential \mu_i.
  Sadly this value depends on the choice of reference energy.
  For choices:
    mu_1 = -V/2
    mu_2 = V/2
  and 
    mu_1 = 0
    mu_2 = V
  one will find two _very_ different results. But this is a matter of choosing the
  zero potential.
  Perhaps we should make the "effective" chemical potentials be subtracted the
  average chemical potential to have a constant potential for varying bias'.
------------------------------------------------------------
revno: 748
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Fri 2017-08-18 12:03:00 +0200
message:
  Fixed wrong documentation in Diag
------------------------------------------------------------
revno: 747
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Mon 2017-08-07 12:58:45 +0200
message:
  Removed unneed m_diagon_opt file
------------------------------------------------------------
revno: 746
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Mon 2017-08-07 12:05:47 +0200
message:
  Fixed compilation of utilities with local_sys.o
  
  It was a matter of updating the sfmakedepend commands.
  Now all utilites (except SiestaSubroutine) works as expected.
------------------------------------------------------------
revno: 745 [merge]
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Mon 2017-08-07 10:20:16 +0200
message:
  Merged 4.1-diag
  
  This merge updates the internal diagonalization routines, greatly.
  
  ELPA has been updated to the latest version (2017.005) This is now the required
  release version of ELPA due to the newer and the stable API.
  
  The diagonalization routines are now all implemented for both real and complex
  cases (Gamma and k-points).
  I.e. now ELPA and MRRR can also be used with nc and spin-orbit.
  There are also a default distribution which should provide better performance for
  large processor counts.
  And lastly, the diagonalization routines now also minimizes the memory requirement
  due to
  
  1. If the 1D distribution memory requirement is >= 2D distribution, we can re-use
     memory thus reducing the required memory by a factor of 2 (at least)
  2. The NC and SO routines are now passed the auxiliary work arrays to reduce
     allocations in the respective diag[23][gk] routines. This also saved some memory.
  
  The LAPACK sources are updated to accommodate the new MRRR routines.
------------------------------------------------------------
revno: 744 [merge]
fixes bug: https://launchpad.net/bugs/1708634
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Fri 2017-08-04 13:56:02 +0200
message:
  Merged 4.0 r531, fixed ioeig for non-colinear spin, lp:1708634
  
  Streamlining the writing of non-colinear spin and spin-orbit EIG files.
------------------------------------------------------------
revno: 743
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Thu 2017-08-03 10:34:48 +0200
message:
  Added more digits to the DM.Tolerance in option-printout
  
  When performing SOC calculations the extra precision may be
  required.
------------------------------------------------------------
revno: 742
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Tue 2017-08-01 15:29:14 +0200
message:
  Added note about energy reference for tbtrans
  
  This is important if one does shifted bias window calculations
  because the energy spectrum gets displaced.
------------------------------------------------------------
revno: 741
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Mon 2017-07-31 14:57:07 +0200
message:
  Fixed bug for tbtrans bias window only calculation
  
  There was a bug in tbtrans contour reading when the contour
  intervals was based on |V|. This is now corrected.
------------------------------------------------------------
revno: 740
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Mon 2017-07-31 14:32:37 +0200
message:
  Fixed warnings for Tbtrans/transiesta and added repeat to rgn_print
  
  rgn_print now enables collecting equal and adjacent items into a [.] * i
  like system. This makes it more readable for very large structures.
  
  Added checks against the memory allocation problem. This typically
  happened for very large tight-binding structures where the pivoting
  needed to be done "manually". Now there are checks by casting to reals
  and checking values.
  
  TBtrans and TranSIESTA now also prints a warning if there are connections
  between electrodes across the device region.
  
  Changed the default electrode pivoting in tbtrans to the largest
  overlapping electrode. It has less effect in transiesta and hence is
  un-changed there.
  
  Added electrode blocks in the siesta.TBT.nc file with electronic
  temperature and chemical potential. I.e now the TBT.nc file ALWAYS
  contains all electrodes as groups.
------------------------------------------------------------
revno: 739
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Wed 2017-07-05 12:09:01 +0200
message:
  Updated documentation dates 
  
  Also added the citation to the latest transiesta article.
------------------------------------------------------------
revno: 738
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Wed 2017-07-05 09:18:12 +0200
message:
  Updated documentation
  
  Accidentially when the Examples/Transiesta was deleted
  the manual was not updated (r715)
------------------------------------------------------------
revno: 737
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Tue 2017-07-04 15:18:05 +0200
message:
  Updated release.sh script to updated version.info file
  
  Now the version.info file will contain the tag used
  to create the tarball.
------------------------------------------------------------
revno: 736
tags: v4.1-b3
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Tue 2017-07-04 10:30:53 +0200
message:
  Updated copyright years in siesta manuals
------------------------------------------------------------
revno: 735
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Tue 2017-07-04 08:52:32 +0200
message:
  Updated Siesta tests
  
  Almost all tests are updated.
  
  I can't get the results of the FePt_zz/zy tests,
  they run for more than 10 hours.
  
  TODO: Update tests to ensure they all converge (SCF convergence)
  and that they run it a reasonable time (regardless of the result).
------------------------------------------------------------
revno: 734
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Mon 2017-07-03 13:28:45 +0200
message:
  Updated Transiesta-TBtrans tests
------------------------------------------------------------
revno: 733 [merge]
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Mon 2017-07-03 13:16:01 +0200
message:
  Merged 4.0 r530
  
  Updated makefiles in Utils so that make clean works by cleaning
  everything.
  
  This makes the script ./clean_all.sh work as it should.
------------------------------------------------------------
revno: 732 [merge]
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Mon 2017-07-03 11:52:23 +0200
message:
  Merged 4.0 r529
  
  Updated makefile for tests, the tests for 4.1-b3 will be added
  in the next commit.
------------------------------------------------------------
revno: 731
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Sun 2017-07-02 10:56:49 +0200
message:
  Updated lapack and blas to 3.7.1
  
  Now the shipped sources of LAPACK and BLAS are updated
  with several bug-fixes.
------------------------------------------------------------
revno: 730 [merge]
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Sun 2017-07-02 10:49:35 +0200
message:
  Merged 4.0 r527
------------------------------------------------------------
revno: 729 [merge]
author: Nick Papior <nickpapior@gmail.com>
committer: Alberto Garcia <albertog@icmab.es>
branch nick: 4.1
timestamp: Sat 2017-07-01 23:12:36 +0200
message:
  Merged 4.0 r526 (units for max-walltime; fdf_isphysical)
------------------------------------------------------------
revno: 728 [merge]
committer: Alberto Garcia <albertog@icmab.es>
branch nick: 4.1
timestamp: Sat 2017-07-01 22:58:50 +0200
message:
  Merged 4.0 r525
  
  (More robust treatment of nspin=4 in GGA XC routines)
  
  Only Src/SiestaXC/ggaxc.f had to be changed.
  Src/xc.f already contained the patch (save cosmetics)
  
  (Thanks to Ramon Cuadrado)
------------------------------------------------------------
revno: 727 [merge]
committer: Alberto Garcia <albertog@icmab.es>
branch nick: 4.1
timestamp: Sat 2017-07-01 15:42:49 +0200
message:
  Merged 4.0 r523+524
  
  Update the STM programs in Util/STM)
------------------------------------------------------------
revno: 726 [merge]
committer: Alberto Garcia <albertog@icmab.es>
branch nick: 4.1
timestamp: Sat 2017-07-01 15:23:38 +0200
message:
  Merged 4.0 r522
  
  (Extra logging and control features)
------------------------------------------------------------
revno: 725
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Thu 2017-06-29 21:35:41 +0200
message:
  Fixed a bug when TBT.Projs.Only was true
  
  This fix is only for tbtrans
------------------------------------------------------------
revno: 724
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Fri 2017-06-23 22:12:34 +0200
message:
  Added error when doing non-colinear or spin-orbit with LDA+U
  
  There are (@R. Robles) some terms missing in the LDA+U
  implementation when non-colinear or spin-orbit coupling is used.
  This has been added to the documentation as well.
  
  Secondly, the setup_hamiltonian now fully uses the spin type.
------------------------------------------------------------
revno: 723
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Fri 2017-06-23 21:49:18 +0200
message:
  Moved globalization of Eso energy into spinorb
  
  To make it easier to use the Eso globalization is
  now performed in the spinorb routine.
  
  Also implemented the spin type in setup_H0
------------------------------------------------------------
revno: 722
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Fri 2017-06-23 21:41:12 +0200
message:
  Changed preprocessor NO_MRRR to MRRR, default not compiled in
  
  Now the MRRR routines are defaulted not to be compiled in.
  If one wishes to use these faster methods one should use the
  preprocessor flag:
   -DSIESTA__MRRR
  which enables the necessary routines.
------------------------------------------------------------
revno: 721
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Fri 2017-06-23 09:25:11 +0200
message:
  Updated the release notes for 4.1-b3
------------------------------------------------------------
revno: 720
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Thu 2017-06-22 11:26:17 +0200
message:
  Fixed EDM spin-orbit coupling <>.nc file
  
  The spin components for the EDM matrix vs. DM is not the
  same for the spin-orbit case.
  Hence a fix was required to make sure they could be obtained correctly.
------------------------------------------------------------
revno: 719
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Mon 2017-06-19 14:07:47 +0200
message:
  Fixed spin-orbit coupling <>.nc file
  
  The spin components for the matrices vs. the real-space grid are not the
  same for the spin-orbit case.
  Hence a fix was required to make sure they could be obtained correctly.
------------------------------------------------------------
revno: 718
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Thu 2017-06-15 21:05:36 +0200
message:
  Fixed flook commit where I erroneously deleted a use statement
  
  Also forced h_chain to not run with MPI
------------------------------------------------------------
revno: 717
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Thu 2017-06-15 12:14:56 +0200
message:
  Fixed LTO compilation of the fdict and ncdf libraries
------------------------------------------------------------
revno: 716
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Thu 2017-06-15 11:38:26 +0200
message:
  Updated manual for the tests runs in the Makefile
------------------------------------------------------------
revno: 715
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Tue 2017-06-13 21:08:33 +0200
message:
  Removed Examples/TranSiesta directory, fixed ts2ts, +doc
  
  Removed the Examples/TranSiesta directory, the example would
  never work in the new TranSiesta because of a too small electrode.
  
  The ts2ts now also copies the old Neigen flag for tbtrans to the
  new specification.
  
  Added more documentation about the Lua interface.
------------------------------------------------------------
revno: 714
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Tue 2017-06-13 07:40:38 +0200
message:
  Fixed print-out of orbital currents with TRS
  
  I.e. now it only prints if the option is wrong.
------------------------------------------------------------
revno: 713
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Sun 2017-06-11 12:48:33 +0200
message:
  Enabled Lua calls with the new mixing routines
  
  The Lua-interface to changing the mixing weight etc. was broken
  because of the new mixing routines added.
  This has now been re-enabled because it seems like a very useful feature.
  
  A couple of requirements were needed to be fulfilled:
  
  1. The fdict variable required an update to enable pointers
     to character arrays (of len=1).
  
  2. The ncdf library then also required an update.
  
  3. The internals of the character retrieving functions needed adaption
     of the new method in fdict.
  
  Now this is much better and easier to handle.
  
  Two examples are now for the "pure" lua interface (not flos):
  
  - lua_h2o
    An adaptive change of the mixing weight per iteration.
    This is in an MD environment and thus it resets it every
    MD step.
    
  - lua_si111
    A mixing method changer based on the convergence criteria.
    This will change the mixer to more aggressive methods at
    certain convergence levels.
  
  Added a example explanations in the documentation.
------------------------------------------------------------
revno: 712
fixes bug: https://launchpad.net/bugs/1697142
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Sat 2017-06-10 11:48:05 +0200
message:
  Fixed double linker libraries in the shipped *.make files
  
  When using the COMB_LIBS files we should not add them to the LIBS
  variable (they are added manually).
  This has been fixed in gfortran.make and intel.make.
------------------------------------------------------------
revno: 711
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Tue 2017-05-23 00:06:14 +0200
message:
  Updated documentation with indices for MD.TypeOfRun
------------------------------------------------------------
revno: 710
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Fri 2017-05-19 21:29:35 +0200
message:
  Fixed Makefile for fdict and ncdf in tshs2tshs
  
  Changes to fdict and ncdf had not been propageted to this utility.
  I have done a:
    grep fdict Util/**/*
  folder and it should now compile everything fine.
------------------------------------------------------------
revno: 709
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Fri 2017-05-19 15:38:14 +0200
message:
  TBT clarified projection output and updated manual for tbtrans
  
  Added more information in the output when projection regions error
  out.
  Also added names to the orbital regions in tbtrans.
------------------------------------------------------------
revno: 708
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Tue 2017-04-25 22:54:59 +0200
message:
  Fixed clean Makefile target when no compilation has been performed
  
  The makefile was performing a clean in a possibly non-existing
  directory. It now checks correctly for it and only then proceeds.
  
  Updated all Makefiles
------------------------------------------------------------
revno: 707
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Fri 2017-04-21 23:10:18 +0200
message:
  Fixed an out-standing bug related to bond-currents and dH (TBT)
  
  The delta-H method in TBtrans has been revised and updated.
  
  Now dH adds e ^ { i k.R } phases for consistency. If people use it
  for rescaling coupling elements this makes sense, if it is used
  for more advanced uses (where the phases shouldn't be there) the
  users should be familiar with this and add the opposite phases.
  
  Secondly, the bond-currents are now defaulting to adding the dH
  elements to the bond-currents. I.e. the same equation for H
  is now also applied with dH. This is controlled via the flag
  
    TBT.dH.Current.Orb
  
  which defaults to True when bond-currents are requested.
  
  The documentation has been updated to reflect the changes.
------------------------------------------------------------
revno: 706 [merge]
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Fri 2017-04-21 22:15:22 +0200
message:
  Merged 4.0 r521
------------------------------------------------------------
revno: 705
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Tue 2017-04-04 21:14:36 +0200
message:
  Updated tbtrans makefile for ncdf compilation
  
  Same as r699 for tbtrans.
------------------------------------------------------------
revno: 704
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Tue 2017-04-04 17:26:16 +0200
message:
  Fixed ncdf compilation on non-gnu compilers
------------------------------------------------------------
revno: 703
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Mon 2017-04-03 21:10:18 +0200
message:
  Added remark of TBT.Projs.T requirement in tbtrans.tex
------------------------------------------------------------
revno: 702
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Thu 2017-03-30 14:24:04 +0200
message:
  Removed unnecessary stuff in Makefile
  
  Updated create_images.py script in flos_h2o_neb test.
------------------------------------------------------------
revno: 701
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Wed 2017-03-29 09:06:42 +0200
message:
  Updated flos-h2o-neb script and reference output with optimized flags
------------------------------------------------------------
revno: 700
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Wed 2017-03-29 08:33:08 +0200
message:
  Forgot to add the flos_h2o_neb reference output in r698
------------------------------------------------------------
revno: 699
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Wed 2017-03-29 08:26:02 +0200
message:
  Bugfix for compilation on weird shells, tabulator inserts are tricky
  
  Now we use printf instead of echo.
------------------------------------------------------------
revno: 698
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Wed 2017-03-29 08:22:45 +0200
message:
  Updated tests folder, added FLOS tests for LBFGS, FIRE and meshcutoff
  
  Added flos tests.
  To run the flos tests it is required that:
  1. SIESTA has been compiled with flook support
  2. flos has been installed by adding the library to the LUA_PATH
     environment variable.
  
  The new flos tests involve a:
   LBFGS relaxation with the H2O molecule
   FIRE relaxation with the H2O molecule
   MeshCutofff convergence with the H2O molecule
   NEB of rotation of H2O molecule in a two molecule setup (not enough vacuum
   , but useful enough for testing).
  
  all 3 are very fast and shows how a Lua implementation could
  be performed.
  
  This also required that the tests folder is updated.
  Now the tests are subdivided into specific tasks:
   tests_soc; all spin-orbit tests. These are typically
   	   very loong tests and require a long time to run.
   tests_flos; tests requiring flook and flos
   tests; everything else
  
  Later these may be extended.
------------------------------------------------------------
revno: 697 [merge]
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Mon 2017-03-27 08:43:38 +0200
message:
  Merged fdict-ncdf branch, contains memory leak fixes
  
  This merge updates the shipped fdict and ncdf sources such that
  1. A pre-processor is not required
  2. Many bug-fixes related to memory leaks have been fixed
  3. Documentation updates.
------------------------------------------------------------
revno: 696 [merge]
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Mon 2017-03-27 08:36:49 +0200
message:
  Merged install-scripts branch, contains installation scripts
  
  This merge enables easy installation of netcdf and flook for
  use in SIESTA.
------------------------------------------------------------
revno: 695
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Wed 2017-03-22 09:41:26 +0100
message:
  Enabled reading TS.Atoms.Buffer using a direct list
  
  This is just slightly easier than using a full block if
  the atoms are consecutive.
  Also updated documentation to reflect this.
------------------------------------------------------------
revno: 694
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Wed 2017-03-22 08:39:33 +0100
message:
  Fixed fixed-spin calculations when writing to XML
  
  There was a bug in writing the Efs array to the XML output.
  This has been fixed.
------------------------------------------------------------
revno: 693
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Wed 2017-03-15 22:04:04 +0100
message:
  Fixed running flook without a file
  
  Commit r692 introduced a bug. This is now fixed.
------------------------------------------------------------
revno: 692
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Wed 2017-03-15 21:38:29 +0100
message:
  Updated flook interaction with flos
  
  Now flos is easier to implement and the routines
  for interaction has been changed from:
    siesta_get/siesta_return
  to
    siesta.receive/siesta.send
  to reflect their nature.
  There were some problems with the return keyword.
------------------------------------------------------------
revno: 691
fixes bug: https://launchpad.net/bugs/1672084
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Sat 2017-03-11 21:45:13 +0100
message:
  Fixed sorting bug in tbtrans introduced in 588
  
  It affected all calculated quantities if these flags
  were true and the sparse pattern was not already sorted:
  TBT.DOS.A
  TBT.Current.Orb
------------------------------------------------------------
revno: 690
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Mon 2017-03-06 14:30:43 +0100
message:
  Fixed sequence of reading the TBT.k block/list now TBT.k is always preferred
------------------------------------------------------------
revno: 689
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Thu 2017-03-02 09:56:25 +0100
message:
  Removed unneeded pre-processor flag in tbt_tri_scat
  
  Now the orbital currents are always with - E * S for energy scaling.
  (Note, they were also before this commit)
------------------------------------------------------------
revno: 688
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Wed 2017-03-01 08:44:09 +0100
message:
  Removed unused variables in tbtrans files, and in m_ts_sparse
------------------------------------------------------------
revno: 687
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Tue 2017-02-28 10:54:23 +0100
message:
  Bugfix in fdict string deletion
  
  Fixed a deletion of iso_var_str.
------------------------------------------------------------
revno: 686
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Mon 2017-02-27 15:20:52 +0100
message:
  Bugfix in documentation of tbtrans
  
  Nomenclature of projections was inconsistent.
------------------------------------------------------------
revno: 685 [merge]
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Mon 2017-02-27 09:02:56 +0100
message:
  Merged 4.0 r520
------------------------------------------------------------
revno: 684 [merge]
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Tue 2017-02-21 08:39:26 +0100
message:
  Merged 4.0 r519
------------------------------------------------------------
revno: 683 [merge]
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Mon 2017-02-20 15:37:39 +0100
message:
  Merged 4.0 r518
------------------------------------------------------------
revno: 682
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Mon 2017-02-20 12:03:43 +0100
message:
  Added error-messages from lua
  
  Now lua-runs are fully compatible and will kill siesta if something
  is wrong.
------------------------------------------------------------
revno: 681 [merge]
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Mon 2017-02-20 10:02:08 +0100
message:
  Merged 4.0 r517
------------------------------------------------------------
revno: 680
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Mon 2017-02-20 10:01:29 +0100
message:
  Fixed memory leaks in parse.F90 and fdf.F90
  
  A memory leak when parsing lists, and one when reading in from
  %include files were detected and fixed. (thanks valgrind)
    valgrind --track-origins=yes --leak-check=full
  is really helpful.
------------------------------------------------------------
revno: 679
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Mon 2017-02-20 09:46:20 +0100
message:
  Fixed memory leaks in fdict, and transiesta related routines
  
  Several memory leaks was detected using valgrind, nearly all
  have been fixed.
  
  Currently, there is still a memory leak regarding the dictionary
  when concatenating. However, it is 2 bytes. I will amend a fix for this
  in a later revision (track fdict on github for when the fix will be
  available).
------------------------------------------------------------
revno: 678
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Fri 2017-02-17 22:45:50 +0100
message:
  Added Lua-error messages
  
  Now siesta will die, if Lua has an error.
  This prohibits running loose.
------------------------------------------------------------
revno: 677 [merge]
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Fri 2017-02-17 14:28:06 +0100
message:
  Merged 4.0 r516
------------------------------------------------------------
revno: 676 [merge]
fixes bug: https://launchpad.net/bugs/1656273
committer: Alberto Garcia <albertog@icmab.es>
branch nick: 4.1
timestamp: Fri 2017-02-17 12:15:11 +0100
message:
  Merge 4.0-515 (Bader fix)
------------------------------------------------------------
revno: 675
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Tue 2017-02-14 09:24:03 +0100
message:
  Bugfix for 2-electrode calculations with transport along 2nd axis
  
  The Vha fix was wrongly calculated.
  Also, added printout of unit for H tolerance in TS.
------------------------------------------------------------
revno: 674
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Wed 2017-02-08 20:44:28 +0100
message:
  Change of mix_scf_first based on DM input
  
  Based on a couple of cases where the DM would converge but would
  have some memory of the initial (previous) DM, we have decided to
  only allow mixing the first SCF step IFF the DM is filled with
  atomic data, or if the read in DM has a different charge than it
  is supposed to.
  This should yield a better converged final DM and thus, forces.
------------------------------------------------------------
revno: 673
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Mon 2017-02-06 19:49:41 +0100
message:
  Added systemlabel to lua handles
  
  Sadly the string does not allow pass by reference, so
  in case the dictionary is deleted it should nullify non-char
  elements. Good thing for now is that the siesta-dicts
  are static.
------------------------------------------------------------
revno: 672
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Sun 2017-02-05 21:15:55 +0100
message:
  Clarified mixing step when linear mixing is started
  
  The mixing algorithm behaved correctly when having a linear
  mixer, however it erroneously ran the accumulation step even
  if the # of saved steps was 0. This has now been fixed.
------------------------------------------------------------
revno: 671 [merge]
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Fri 2017-02-03 11:38:11 +0100
message:
  Merged 4.0 r513-514
------------------------------------------------------------
revno: 670
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Fri 2017-02-03 10:47:57 +0100
message:
  Updated release.sh script in Docs
  
  Now there are more information on how to create a release.
------------------------------------------------------------
revno: 669
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Fri 2017-02-03 10:22:15 +0100
message:
  Fixed printout of suggested k-point sampling for electrode
  
  The suggested k-point sampling for electrodes was not enforcing
  the high k-point sampling in the semi-infinite direction.
------------------------------------------------------------
revno: 668
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Fri 2017-02-03 09:48:49 +0100
message:
  Fixes propagation calculation of the T.Out quantity
  
  The calculation of Tr[G.Gamma] using the propagation method
  was erroneous. This has been fixed (checked against the column
  spectral calculation, yay for two methods).
  
  Allowed dipole corrections in 1-electrode calculations
  because they will most likely be slabs and never an applied
  field. Hence the dipole correction may be needed along the
  semi-infinite direction.
  
  Updated tbtrans documentation to indicate what files are generated
  from which options. Added explanation of the aggregate transmission
  value.
------------------------------------------------------------
revno: 667
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Thu 2017-02-02 16:36:51 +0100
message:
  Added even more variables to the siesta_dictionaries
  
  This enables more communication with flos
------------------------------------------------------------
revno: 666
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Wed 2017-02-01 20:35:30 +0100
message:
  Changed default of WriteH to false
  
  Now siesta does not write out these files:
    H_DMGEN/H_MIXED
  They are mainly intended for testing use and not explicitly
  usable for regular users.
  
  See discussion here:
  https://code.launchpad.net/~nickpapior/siesta/siesta-forces-cleanup/+merge/315621
  
  Also updated documentation regarding these aspects.
------------------------------------------------------------
revno: 665
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Wed 2017-02-01 13:39:31 +0100
message:
  Almost finalized the flook interoperability
  
  Added documentation of the Lua scripting capability.
  In the documentation I have added a link to the flos library
  which already implements a few enhancements over the previous things.
  
  Added a new state in Lua, INIT_MD which is required to be able to
  do MeshCutoff convergences, this required the mesh cut-off to be retrieved
  from setup_H0.
  
  Added target attribute to the siesta-dictionary to ensure they are passed by
  reference.
  
  Added Mesh.Cutoff.Minimum and Mesh.Cutoff.Used.
  
  Moved the SCF_LOOP state to be just after mixing has been performed.
  
  Added the new states to the h2o_lua example.
------------------------------------------------------------
revno: 664 [merge]
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Tue 2017-01-31 09:43:09 +0100
message:
  Merged 4.0 r512
------------------------------------------------------------
revno: 663
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Tue 2017-01-31 09:39:47 +0100
message:
  Updated siesta_dicts options for interacting with mesh
  
  Now all Grid.* has been updated to Mesh.*. In additon
  the MeshCutoff is now Mesh.Cutoff.
  
  Also added the k-point sampling to enables this in Lua
  calls.
------------------------------------------------------------
revno: 662
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Fri 2017-01-27 19:03:40 +0100
message:
  Fixed siesta dictionary for the flook interaction
  
  Now the initial and final movements can be accessible
  with:
  
     MD.Steps.First
     MD.Steps.Last
------------------------------------------------------------
revno: 661
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Fri 2017-01-27 15:21:44 +0100
message:
  Fixed coordinate exchanges to LUA and added a bunch more
  
  In the LUA hook one now has access to the unit conversion
  table:
  
    siesta.Units
  
  which contains all the unit conversions used internally in
  siesta.
  
  Added all the tolerance variables to the siesta dictionaries
  for communicating with lua
  
  A bug was found for communicating the coordinates from siesta
  to lua. When a supercell calculation was performed the xa(:,1:na_s)
  was sent, while it should only be xa(:,1:na_u). This has been fixed.
  
  Minor fixes in the usage of the options in siesta_options and read_options
  The default variable was not really used, and has been removed.
------------------------------------------------------------
revno: 660
fixes bug: https://launchpad.net/bugs/1646118
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Thu 2017-01-26 10:30:17 +0100
message:
  Made transiesta and tbtrans quit if the transfer matrix is 0
  
  If the user supplies an electrode where the transfer matrix is 0
  transiesta and tbtrans will now die, regardless of whether the user
  wants this.
  In fact, we could allow this by treating it as a molecular end, however
  it will then not be a reservoir.
  This sanity check should prevent users from doing wrong calculations.
  
  Also fixed print-out of electrode names if options are inconsistent in
  m_ts_electype.
------------------------------------------------------------
revno: 659
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Thu 2017-01-26 10:11:21 +0100
message:
  Updated documentation fixes lp:1646566
  
  Now it is clear how the initial spin-configuration is
  applied.
------------------------------------------------------------
revno: 658
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Thu 2017-01-26 08:26:19 +0100
message:
  Added more energies to the siesta-dictionary
  
  They are now available in the LUA calls as well.
------------------------------------------------------------
revno: 657
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Thu 2017-01-26 08:07:35 +0100
message:
  In lua md we now allow cell relaxations
  
  When doing LUA MD these variables are now available:
   MD.Relax.CellOnly
   MD.Relax.Cell
  which may be used to identify how the relaxation of the
  cell is requested.
  
  If one sets the cell to 0 in the LUA code siesta will
  now automatically calculate a new cell-size.
  
  Added write-out of the XV file in LUA-MD.
------------------------------------------------------------
revno: 656
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Wed 2017-01-25 22:30:25 +0100
message:
  Fixed displacement vector for elec-hartree plane
  
  When the electrode plane could not find any points inside
  the unit-cell a displacement vector is printed to help
  the user moving all atoms. The vector printed could in certain
  cases be wrong.
  This is now fixed.
------------------------------------------------------------
revno: 655 [merge]
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Wed 2017-01-25 19:45:49 +0100
message:
  Merged 4.0 r511
------------------------------------------------------------
revno: 654
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Wed 2017-01-25 12:59:37 +0100
message:
  Fixed tbtrans calculation of polarized calculations without TBT.Spin
  
  I had mistakenly pointed to an empty pointer in case of the second spin
  channel when doing polarized calculations.
  Now this is fixed.
------------------------------------------------------------
revno: 653 [merge]
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Wed 2017-01-25 11:42:39 +0100
message:
  Merged 4.0 r510
  
  This merge is a no-op, the fix was already applied (erronously
  by me).
------------------------------------------------------------
revno: 652
fixes bug: https://launchpad.net/bugs/1658518
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Wed 2017-01-25 10:50:50 +0100
message:
  Fixed bug related to PGI compiler
  
  A list of derived type was public, whereas the derived type was
  private. This is not allowed.
  
  Fixes lp:1658518
------------------------------------------------------------
revno: 651
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Wed 2017-01-25 10:42:41 +0100
message:
  Fixed hartree plane with 1 electrode calculations
  
  Now transiesta allows hartree-plane for 1 electrode calculations
------------------------------------------------------------
revno: 650
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Wed 2017-01-25 09:35:39 +0100
message:
  Allowed tselecs.sh to create input for 1 electrode (never a bias)
------------------------------------------------------------
revno: 649
fixes bug: https://launchpad.net/bugs/1658520
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Tue 2017-01-24 19:43:31 +0100
message:
  Fixed g95 compilation, fixes r632 and lp:1658520
  
  Apparently g95 does not allow intrinsic interfaces with
  optional arguments named the same as the argument in the intrinsic
  interface:
     size(..., dim)
  where dim is an optional argument in the calling routine is not 
  allowed. Basic work-around is to do:
     ldim = dim
     size(..., ldim)
  and it works.
------------------------------------------------------------
revno: 648
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Tue 2017-01-24 19:37:15 +0100
message:
  Updated dictionaries which may be passed to lua
  
  The flook dictionaries have been updated. Now one
  can also pass back and forth the stress tensor.
  TODO: fix the problem of changing the cell-vectors
  such that one can do external cell-relaxations.
------------------------------------------------------------
revno: 647 [merge]
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Thu 2017-01-19 07:45:43 +0100
message:
  Merged 4.0 r509
------------------------------------------------------------
revno: 646
fixes bug: https://launchpad.net/bugs/1657484
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Wed 2017-01-18 17:02:57 +0100
message:
  Fixed OMP statement when transfering to F90
  
  Forgot an ampersand for contiunation line,
  
  fixes lp:1657484
------------------------------------------------------------
revno: 645
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Wed 2017-01-18 11:26:51 +0100
message:
  Moved normalize_DM.F to normalize_DM.F90
  
  Updated to fortran 90 for the normalize_DM code.
------------------------------------------------------------
revno: 644
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Wed 2017-01-18 11:18:19 +0100
message:
  Fixed a bug in normalize_DM
  
  Since the SO merge the normalize_DM has only normalized the
  first 4 components. Since r632 it only normalized the
  first 2.
  
  Now everything is normalized.
------------------------------------------------------------
revno: 643
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Wed 2017-01-18 09:18:31 +0100
message:
  Changed maxk to nkpnt and implemented spin-type in siesta_init
  
  The maxk variable was dubious and not consistent throughout the 
  code. Now we have removed maxk to only rely on the kpoint_grid
  nkpnt.
------------------------------------------------------------
revno: 642
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Wed 2017-01-18 08:39:04 +0100
message:
  Fixed initial spin printout
  
  The size of the DM matrix was not correctly estimated.
  Now it loops over all orbitals as it should.
------------------------------------------------------------
revno: 641
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Thu 2016-12-29 16:45:19 +0100
message:
  Updated Makefile depedencies
------------------------------------------------------------
revno: 640
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Thu 2016-12-29 11:36:10 +0100
message:
  Updated citation for latest transiesta article
------------------------------------------------------------
revno: 639
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Thu 2016-12-29 11:12:45 +0100
message:
  Updated shipped blas and lapack to 3.7.0
  
  Fixed a few small bugs for compatibility in the script
  that creates the lapack/blas sources.
------------------------------------------------------------
revno: 638
fixes bug: https://launchpad.net/bugs/1652548
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Tue 2016-12-27 12:08:17 +0100
message:
  Bug in restructdSpData2D due to no interface
  
  In the recent merge r632 there was left out an interface for
  the subroutine. This meant that the optional flag was never
  really optional, but set to a non-initialized integer.
  The fix is to wrap the routine in a module.
  
  Fixes: lp:1652548
------------------------------------------------------------
revno: 637
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Thu 2016-12-22 09:20:08 +0100
message:
  Added developer version of manual
  
  The developer version of the manual should only be build
  by persons interested in further extending the siesta code
  and wishes to understand the data-structures and internals
  of siesta more intimately.
  
  Currently there are no additions to the developer version.
------------------------------------------------------------
revno: 636
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Wed 2016-12-21 12:21:28 +0100
message:
  Fixed bugs in custom settings for the mixer
  
  Fixed all known bugs in the mixer routines
------------------------------------------------------------
revno: 635
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Tue 2016-12-20 10:09:39 +0100
message:
  Fixed tbtrans documentation about hybrid parallel
  
  The mpirun command was wrong
------------------------------------------------------------
revno: 634
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Fri 2016-12-16 15:31:45 +0100
message:
  Merged tbtrans fixes and documentation update
  
  This fixes lp:1649774
------------------------------------------------------------
revno: 633 [merge]
fixes bug: https://launchpad.net/bugs/1649774
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Wed 2016-12-14 11:20:15 +0100
message:
  Merged tbtrans fixes and documentation update
  
  This fixes lp:1649774
------------------------------------------------------------
revno: 632 [merge]
fixes bug: https://launchpad.net/bugs/1645388
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Tue 2016-12-13 14:59:33 +0100
message:
  Merged new initialization routines for new_DM
  
  This clarifies the structure of the new_dm routine by
  splitting the init_DM routine into a "read" and an
  "atomic" init routine.
  In case we read a DM siesta now allows reading a different
  spin structure and does automatic extrapolation.
  
  This partially fixes lp:1645388
------------------------------------------------------------
revno: 631
fixes bug: https://launchpad.net/bugs/1648053
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Wed 2016-12-07 19:48:14 +0100
message:
  Fixed bug when printing initial spin-difference
  
  This bug was introduced in r590.
------------------------------------------------------------
revno: 630 [merge]
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Mon 2016-12-05 14:17:32 +0100
message:
  Merged 4.0-r508, reverted merge (no changes required)
------------------------------------------------------------
revno: 629
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Mon 2016-12-05 11:54:02 +0100
message:
  Fixed non-collinear and spin-orbit PDOS in serial
  
  Partially fixes lp:1645749.
  
  There was a factor of 2 mixing to print the magnetization,
  this is now fixed both for PDOS output and XML output.
------------------------------------------------------------
revno: 628
fixes bug: https://launchpad.net/bugs/1647073
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Mon 2016-12-05 09:10:22 +0100
message:
  Removed FoX format specifier when it can not be used
  
  Fixes lp:1647073.
  
  Also limited number of fields for single precision
  numbers by default in the xml output routines.
  A single precision number only has 7 significant
  digits, so we limit the output to that amount,
  instead of the previous 12 digits.
------------------------------------------------------------
revno: 627
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Tue 2016-11-29 09:43:56 +0100
message:
  Updated the way the date is printed in the manual
  
  Now the date tag is automaticly updated when the
  release.sh script is runned. This makes it easier
  to track.
  Also, one should change the \date macro before
  the begin{document} to change the date.
------------------------------------------------------------
revno: 626
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Tue 2016-11-29 09:31:35 +0100
message:
  Stepped the manual version for 4.1-b3
------------------------------------------------------------
revno: 625
tags: v4.1-b2
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Mon 2016-11-28 10:01:28 +0100
message:
  Updated manual for tbtrans and transiesta
  
  Added more documentation regarding PDOS which is oftenly requested
------------------------------------------------------------
revno: 624 [merge]
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Sun 2016-11-27 21:03:03 +0100
message:
  Merged 4.0 r507
  
  Added print-outs of the difference from the averaged forces
  to figure out if it is really important or not.
------------------------------------------------------------
revno: 623 [merge]
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Fri 2016-11-25 19:04:25 +0100
message:
  Merge LDA+U fix, fixes lp:1643589
  
  This fixes a problem with the LDA+U calculations
  if using non-standard options.
------------------------------------------------------------
revno: 622
committer: Alberto Garcia <albertog@icmab.es>
branch nick: 4.1
timestamp: Thu 2016-11-24 15:00:33 +0100
message:
  Add two more files to Denchar output in 3D mode
  
  For spin-polarized calculations, Denchar now outputs
  two more files:
  
  SystemLabel.RHO.cube:         Total charge density (sum over spins)
  SystemLabel.UPminusDOWN.cube: UP-DOWN spin difference
------------------------------------------------------------
revno: 621
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Thu 2016-11-24 11:06:28 +0100
message:
  Updated documentation of tbtrans
  
  Slight errors were in the tbtrans documentation and
  more has been fixed.
------------------------------------------------------------
revno: 620
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Tue 2016-11-22 09:38:33 +0100
message:
  Forced the suffixes in the makefile
  
  - Having the SUFFIXES explicitly in the Makefile will make
    it easier to create the arch.make files.
    Essentially now they only need to define the compiler, 
    compiler flags, and the compiler rules.
------------------------------------------------------------
revno: 619
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Thu 2016-11-17 08:10:22 +0100
message:
  The naming scheme for the tolerance parameters where illogical
  
  - They have now been updated and should be the new defaults.
------------------------------------------------------------
revno: 618
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Wed 2016-11-16 17:42:04 +0100
message:
  Fixed code from r616 where an s was missing in a variable
  
  - Updated makefiles
------------------------------------------------------------
revno: 617 [merge]
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Tue 2016-11-15 11:17:18 +0100
message:
  Merge 4.0, r506 with VCA fixes
------------------------------------------------------------
revno: 616 [merge]
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Tue 2016-11-15 11:05:33 +0100
message:
  Merge 4.1-fixes, fixes bugs in transiesta
  
  1) 1639779
  2) 1639812
  3) 1641573
------------------------------------------------------------
revno: 615
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Tue 2016-11-15 10:37:58 +0100
message:
  Added more documentation on using the manual
  
  - Enabled dependency list for easy dependency look-ups
    in fdfentry blocks.
  
  - Added dependencies on the SCF.Tolerance.* flags.
------------------------------------------------------------
revno: 614
fixes bug: https://launchpad.net/bugs/1640813
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Mon 2016-11-14 08:57:21 +0100
message:
  Fix tree-timer with TS lp:1640813
  
  - The tree-timer only allows timer-reports on
    direct children of the current active section.
    This is not possible with the TS section because
    it is "hidden" under the IterSCF routine.
    Thus for tree-timers we now simply print the
    IterSCF tree which holds the TS section.
------------------------------------------------------------
revno: 613 [merge]
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Fri 2016-11-11 15:23:03 +0100
message:
  Merge of MD-constraint fixes
------------------------------------------------------------
revno: 612
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Mon 2016-11-07 17:15:13 +0100
message:
  Error in r611, the referenced variable ts_tidx should be >0
  
  - Fixed the commit so that it correctly interprets the flags.
------------------------------------------------------------
revno: 611
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Mon 2016-11-07 15:38:55 +0100
message:
  Fixed transiesta documentation for the Poisson solution
  
  - The documentation was not documenting the input file
    option for the poisson fix.
  
  - Removed redundant flag TS.Poisson.Position
    which is now encapsulated in TS.Poisson.
------------------------------------------------------------
revno: 610
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Mon 2016-11-07 08:34:42 +0100
message:
  Fixed tbtrans documentation and the makefile
  
  - The tbtrans documentation had some inconsistencies for
    certain flags.
  
  - The makefile for the documentation was missing one more
    compilation step to update the index position.
------------------------------------------------------------
revno: 609 [merge]
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Fri 2016-11-04 15:38:22 +0100
message:
  Merged fixes for tbtrans
------------------------------------------------------------
revno: 608 [merge]
committer: Alberto Garcia <albertog@icmab.es>
branch nick: 4.1
timestamp: Fri 2016-11-04 15:26:44 +0100
message:
  Some optimizations in nlefsm
  
  Routine nlefsm stands out as a bottleneck for parallelization
  efficiency, since the loop over KB projectors is "global", and a
  substantial amount of work, proportional to the size of the system,
  has to be done by all MPI processes.  The initial steps in nlefsm
  optimization have reduced the cpu weight of that loop by:
  
  - Pre-computation (in hsparse) of the atoms really involved in KB
    overlaps with the orbitals handled by the process.
  - Early exit from the loop after simpler tests
  - Other minor optimizations
------------------------------------------------------------
revno: 607
fixes bug: https://launchpad.net/bugs/1638726
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Thu 2016-11-03 19:31:09 +0100
message:
  Fixed print-out chemical potentials and Volt, fixes lp:1638726
  
  - If the difference between the max and min of the
    chemical potentials and the applied bias is
    too large then the program (TS and TBT) will
    die.
    
------------------------------------------------------------
revno: 606 [merge]
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Thu 2016-11-03 16:02:37 +0100
message:
  Merged manual fixes for a completely rewritten manual
  
  - Fixes T.Elecs.All => T.All
    and other variations thereof
------------------------------------------------------------
revno: 605 [merge]
committer: Alberto Garcia <albertog@icmab.es>
branch nick: 4.1
timestamp: Mon 2016-10-31 22:00:50 +0100
message:
  Include recent patchlogs from 4.0
  
  Some recent bugfixes and other changes were ported from 4.0 without a
  proper inclusion of the relevant patchlogs. This made it appear (e.g.,
  in 'bzr missing') as if the fixes had not been applied upstream.
  
  A merge followed by 'bzr revert .' includes the desired patchlogs without
  any more changes in the working directory.
  
  - Declare all variables
  - Fixes non-colinear band calculation, fixes lp:1636100
  - Fix bug 1625725 in 'nodes' basis-generation option
  - Did not allow user control of SlabDipoleCorrection, fixes lp:1630827
------------------------------------------------------------
revno: 604
committer: Alberto Garcia <albertog@icmab.es>
branch nick: 4.1
timestamp: Mon 2016-10-31 14:43:46 +0100
message:
  Declare most variables
  
  Some variables were not properly declared. This can cause errors if a
  compiler flag to catch implicit typing is used.
  
  Except in file fdict/iso_var_str.f90, all variables are now declared.
------------------------------------------------------------
revno: 603
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Tue 2016-10-25 12:36:33 +0200
message:
  Fixed cell constraints and the manual regarding this
  
  The cell constrainst for non-orthogonal cells is not
  really working. I have added checks for this in the
  code and now it will die if it cannot do what is requested.
  Simultaneously the cell-angle constraints only allows
  expansion of the spanning vectors. 
------------------------------------------------------------
revno: 602
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Tue 2016-10-25 09:05:36 +0200
message:
  Fix electrode plane determination if Bloch expansions are used
  
  In case Bloch expansion is used for only one electrode the Hartree
  plane was more or less fixed at the non-Bloch electrode.
  This has now been fixed.
  This should have no effects in the calculation.
------------------------------------------------------------
revno: 601
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Tue 2016-10-25 07:58:07 +0200
message:
  Fixed documentation with XML changes
------------------------------------------------------------
revno: 600
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Mon 2016-10-24 11:49:33 +0200
message:
  Fixed defaults for tbtrans and chemical potentials
  
  Now the defaults for tbtrans are so that:
   1. if there is no bias, there is no need to specify
   the chemical potentials.
   2. if there is a bias, the default is the transiesta
   default.
  
  This enables easier input for tight-binding calculations.
------------------------------------------------------------
revno: 599
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Fri 2016-10-21 14:30:21 +0200
message:
  Updated obj_setup.sh to not mention the configure script
  
  We had forgotten to remove the configure reference in the 
  obj_setup.sh file.
------------------------------------------------------------
revno: 598
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Fri 2016-10-21 13:59:25 +0200
message:
  Added gfortran.make and intel.make in Obj directory
  
  These are example arch.make files
------------------------------------------------------------
revno: 597
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Fri 2016-10-21 13:55:53 +0200
message:
  In FoX removal there was some changes that were not shipped to TS
  
  Bug fixes for compilation of TS using WXML only (no FoX)
  Now siesta and transiesta have the same link-lines
------------------------------------------------------------
revno: 596 [merge]
committer: Alberto Garcia <albertog@icmab.es>
branch nick: 4.1
timestamp: Fri 2016-10-21 11:59:30 +0200
message:
  Implement CML calls using an upgraded Src/wxml library
  
  The generation of the CML file with the most important data from a run
  is now handled by an upgraded version of the existing code in Src/wxml
  (part of xmlf90, based on earlier work by Jon Wakelin and Toby White).
  
  The new code is now also used in pdos.F (which still contains a
  parallel xml thread to maintain compatibility with one of Andrei
  Postnikov's tools).
  
  This matches FoX's wxml functionality with a much smaller footprint, so
  the FoX code has been removed from the distribution.
------------------------------------------------------------
revno: 595
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Wed 2016-10-19 11:34:03 +0200
message:
  Enabled default chemical potentials if they are named equally
  
  This makes setting the default chemical potential more easy
  if one names the chemical potentials and electrodes by the
  same names.
  
  Furthermore, if there is only one chemical potential then
  that is ALWAYS selected.
------------------------------------------------------------
revno: 594
fixes bug: https://launchpad.net/bugs/1625725
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Wed 2016-10-19 09:39:07 +0200
message:
  Bug fix for PAO.BasisType node lp:1625725
------------------------------------------------------------
revno: 593
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Wed 2016-10-19 09:31:41 +0200
message:
  Removed all references to paste function (also utils)
  
  There was no need to have this function, trim is the equivalent
  function.
  
  All utilities have also been updated.
------------------------------------------------------------
revno: 592
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Tue 2016-10-18 18:07:59 +0200
message:
  Enabled list setting of the k-point sampling for tbtrans
  
  Also updated manual for tbtrans to reflect the TBT.Symmetry.TimeReversal
  flag which is needed for TBT.Current.Orb and k-point sampling.
------------------------------------------------------------
revno: 591
author: Ramon Cuadrado <ramon.cuadrado@cin2.es>
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Fri 2016-10-14 14:38:43 +0200
message:
  Updated manual with spin-orbit information
------------------------------------------------------------
revno: 590
fixes bugs: https://launchpad.net/bugs/1623415 https://launchpad.net/bugs/1623420
author: Ramon Cuadrado <ramon.cuadrado@cin2.es>
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Fri 2016-10-14 14:27:57 +0200
message:
  Fixes the spin-printout and calculation (NC and SO)
  
  - The sign in the initialization of the fourth component of the 
    Density Matrix when the Spin-Orbit term is included in the calculation
    has been changed to be consistent with the DM.InitDM in the fdf file. 
    The corresponding sobroutine is fill_dscf_from_atom_info within the 
    module m_new_dm. In addition, at the end of fill_dscf_from_atom_info 
    subroutine is called print_initial_spin() that currently prints out 
    the initial spin polarization. This has been changed and on whether 
    spin polarized or non-collinear/spin-orbit calculation is performed, 
    the output will be Q(1)-Q(2) in the first case and M_x, M_y and M_z 
    in the second.    
    
  - The calculation of the angles of the magnetization vector as a function 
    of q(1:4) in the subroutine spnvec by Mulliken population has been 
    reviewed when the number of spin components is four(non-collinear/spin-orbit). 
------------------------------------------------------------
revno: 589
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Tue 2016-10-11 21:38:17 +0200
message:
  Bug discovered when running linear-kick and MD 
  
  - The itteration counter for the mixing routines was never
    reset which meant that depending on the number of SCF siesta would
    crash in the next MD step.
    
    Thanks to R. Robles for the bug-report
  
  - Added print-out when resetting the history, and fixed
    debug read for the mixers.
------------------------------------------------------------
revno: 588
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Mon 2016-10-10 15:00:00 +0200
message:
  Enabled supercell bond-currents
  
  - The previous orbital currents were stored only in the unit-cell
    However, we now enable the full calculation of the supercell interactions.
    This is a minor change and results in a slightly larger sparse matrix.
    The sisl package has been updated to handle this as well.
  
  - Added Sp_sort in m_sparsity_handling which ensures that a sparse matrix
    is sorted.
  
  - Possibly fix for spin-transport calculations in tbtrans.
    The abstraction of only calculating one spin-component made the logic
    erroneous.
------------------------------------------------------------
revno: 587
fixes bug: https://launchpad.net/bugs/1630849
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Thu 2016-10-06 14:41:05 +0200
message:
  MD methods other than CG did not allow re-use of DM, fixes lp:1630849
  
  Now it defaults to at least 1 extrapolation.
------------------------------------------------------------
revno: 586
fixes bug: https://launchpad.net/bugs/1630827
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Thu 2016-10-06 09:26:34 +0200
message:
  Did not allow user control of SlabDipoleCorrection, fixes lp:1630827
  
  For backwards compatibility it is nice to be able to turn off the 
  SlabDipolecorrection such that one can compare against older versions.
  This was a mistake.
------------------------------------------------------------
revno: 585
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Wed 2016-10-05 09:25:53 +0200
message:
  Forgot to actually delete the configure files and other obsoleted files
  
  This commit should have gone together with r582
------------------------------------------------------------
revno: 584
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Tue 2016-10-04 11:39:32 +0200
message:
  Updated manual to reflect changes of configure
------------------------------------------------------------
revno: 583
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Tue 2016-10-04 11:31:12 +0200
message:
  Fixed m_mpi_utils for globalization of integer
  
  There was a missing transfer if MPI wasn't defined.
  Also added the missing arguments of `Comm`
------------------------------------------------------------
revno: 582
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Tue 2016-10-04 11:22:48 +0200
message:
  Removed unnecessary configure/arch-make stuff
  
  Removed all configure related stuff. This is now "obsoleted"
  until an expert tells us what to do.
  
  Moved sample arch.make files to the Obj directory. In this way
  the basic examples and documentations are where people will
  initially search for them.
  
  Removed deprecated lapack/blas sources. Now one should use the full
  sources in case the optimized libraries does not contain the needed
  functionality.
  
  Cleaned up Makefile.
  Specifically the rule for the sockets.c file was unnecessary as
  it was (almost) equal to the implicit rule of C-compilation.
  
  Removed folders:
    Src/Sys
    Src/Conf
    Src/m4
------------------------------------------------------------
revno: 581
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Tue 2016-10-04 08:45:36 +0200
message:
  Added citation for transiesta and pexsi
------------------------------------------------------------
revno: 580
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Wed 2016-09-28 21:20:28 +0200
message:
  Fixed print-out in m_region (nothing computational)
  
  - The last items was missing a comma-separation
------------------------------------------------------------
revno: 579
fixes bug: https://launchpad.net/bugs/1627041
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Wed 2016-09-28 09:23:17 +0200
message:
  Updated blas.f, lapack.f the documentation and Makefile, fixes 1627041
  
  - blas.f and lapack.f where updated to the latest LAPACK sources.
    There were some minor bugs.
  
  - The documentation of tbtrans was missing the pivot flag description.
  
  - The Makefile was not forwarding the INCFLAGS to FFLAGS in libfdict and
    libncdf which is necessary.
    This fixes: lp:1627041
------------------------------------------------------------
revno: 578
committer: Alberto Garcia <albertog@icmab.es>
branch nick: 4.1
timestamp: Tue 2016-09-27 12:13:48 +0200
message:
  Write LDA+U projector information to .ldau_proj files
  
  For LDA+U calculations, the projector information was written to the
  .ion files in a form that made them unusable. Now, that information is
  written to files with names 'SpLabel'.ldau_proj, where 'Splabel' is
  the species label.
------------------------------------------------------------
revno: 577
committer: Alberto Garcia <albertog@icmab.es>
branch nick: 4.1
timestamp: Tue 2016-09-27 11:31:30 +0200
message:
  Add third argument to reclat call in two routines
------------------------------------------------------------
revno: 576
committer: Alberto Garcia <albertog@icmab.es>
branch nick: 4.1
timestamp: Fri 2016-09-16 14:25:04 +0200
message:
  Fix double import in mpi_siesta
------------------------------------------------------------
revno: 575 [merge]
fixes bug: https://launchpad.net/bugs/1619437
committer: Alberto Garcia <albertog@icmab.es>
branch nick: 4.1
timestamp: Wed 2016-09-14 18:19:23 +0200
message:
  Changes to further standards compliance (merges 4.0--501)
  
  Brought about by the use of extra compiler checks, notably by g95 and
  the '-std=f2003 -fall-intrinsics' setting in gfortran.
  
  Apart from syntax and visibility issues, F2008 extensions
  ('contiguous' keyword), and non-standard declarations (such as
  "real*8") have been removed. Bounds specification in pointer
  assignment is in principle permitted by F2003, but are not yet
  implemented by all compilers.
  
  Also, the building of the MPI interfaces has been updated to properly
  include 8-byte integers.
  
  (Declarations in the code in Util are not fully updated yet)
------------------------------------------------------------
revno: 574
fixes bug: https://launchpad.net/bugs/1622526
committer: Alberto Garcia <albertog@icmab.es>
branch nick: 4.1
timestamp: Mon 2016-09-12 11:19:56 +0200
message:
  Fix bug in switch-off option for MRRR
------------------------------------------------------------
revno: 573
tags: v4.1-b1
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Wed 2016-08-31 07:52:35 +0200
message:
  Removed __FILE__ reference in class_Distribution
  
  - In some cases will this preprocessor fail.
    Besides, it was only used in one place.
  
  - Fixed release.sh (dublicate path)
    and removed it self from the release tarball
------------------------------------------------------------
revno: 572
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Tue 2016-08-30 16:02:33 +0200
message:
  Removed default constants in read_options
  
  - There was no need to have elsewhere defined
    defaults in read_options. Now they are
    hard-coded which makes it easier to
    track and change.
  
  - Updated all makefiles.
------------------------------------------------------------
revno: 571
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Tue 2016-08-30 15:46:54 +0200
message:
  Updated to new manual format
------------------------------------------------------------
revno: 570
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Tue 2016-08-30 11:41:02 +0200
message:
  Added Gate-tests
  
  - Added gate_G_{charge,hartree} for charge and Hartree gates
------------------------------------------------------------
revno: 569
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Tue 2016-08-30 11:32:08 +0200
message:
  Forced mulliken printout during SCF to false in certain cases
  
  - If the user does not request a specific type of mulliken population
    AND request mulliken per SCF, then it is automatically turned off.
------------------------------------------------------------
revno: 568
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Tue 2016-08-30 10:31:55 +0200
message:
  Updated manual and removed obsolete appendices
  
  - Also minor fixes across the full manual.
    References, spelling mistakes etc.
  
  - Highlighted that the release is a beta release
------------------------------------------------------------
revno: 567
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Tue 2016-08-30 08:35:45 +0200
message:
  Updated tbtrans manual for the next release
------------------------------------------------------------
revno: 566
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Tue 2016-08-30 08:07:55 +0200
message:
  Moved release notes, changed SIESTA__MRRR to SIESTA__NO_MRRR
------------------------------------------------------------
revno: 565 [merge]
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Tue 2016-08-30 07:43:37 +0200
message:
  Merged AG changes for 4.1 release
  
  Introduction of SIESTA__MRRR and several forgotten
  variables in certain modules.
------------------------------------------------------------
revno: 564
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Mon 2016-08-29 08:36:23 +0200
message:
  Enabled compilation of link-time optimizations
  
  - Link-time optimizations are required to have the compiled
    libraries made with the same flags.
    This commit introduces small fixes to a few Makefiles
    FoX and SiestaXC which now allows link-time optimizations.
  
    Using LTO for GCC 6.1.0 the final executable decreases
    by a staggering 33%
------------------------------------------------------------
revno: 563
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Fri 2016-08-26 08:32:41 +0200
message:
  Added documentation of NetCDF-4 file, changed file to slabel
  
  - Added documentation for the generic SIESTA NetCDF file
  
  - Ensured that the NetCDF-4 file is named <slabel>.nc
------------------------------------------------------------
revno: 562
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Thu 2016-08-25 13:44:59 +0200
message:
  Fixed documentation and added flook and tbtrans
  
  - Defining the 4.1 in the documentation was incorrect.
  
  - Added how to enable flook
  
  - Added missing flag for tbtrans calculations which
    ensures a correct DOS on the device atoms.
------------------------------------------------------------
revno: 561
committer: Nick Papior <nickpapior@gmail.com>
branch nick: 4.1
timestamp: Tue 2016-08-23 21:29:36 +0200
message:
  Prepared release branch for 4.1
------------------------------------------------------------
revno: 560
tags: s4.1
committer: Nick Papior <nickpapior@gmail.com>
branch nick: trunk
timestamp: Tue 2016-08-23 21:22:56 +0200
message:
  Removed entroy print outs from pexsi defs
  
  Simple removal of output which where debugging statements
  for the PEXSI method.
------------------------------------------------------------
revno: 559
committer: Nick Papior <nickpapior@gmail.com>
branch nick: trunk
timestamp: Tue 2016-08-23 07:02:49 +0200
message:
  Made older shipped libraries issue a warning on compilation
  
  - The linalg.a libraries (etc.) are now deprecated in favor
    of libsiestaBLAS.a and/or libsiestaLAPACK.a
  
    Trying to use the previous libraries in COMP_LIBS
    results in a warning message and quits.
------------------------------------------------------------
revno: 558
committer: Nick Papior <nickpapior@gmail.com>
branch nick: trunk
timestamp: Fri 2016-08-19 07:32:11 +0200
message:
  Updated transiesta-tbtrans tests with the new settings
  
  - Everything seems in order. In fact some of the
    convergence properties are now better due to the
    constraint on the Hamiltonian.
  
  - Fixed the print-out of error on the energy density
    matrix to print in eV.
  
  - Fixed scripts for TS tests to only compile tbtrans
    if it isn't already compiled.
  
  - Removed mentions of old flags in the TS test.
    Also corrected those which have farther than principal
    cell connections.
    In these situations I have added a remark for the flag
    so it should be clear its use is highly discouraged.
------------------------------------------------------------
revno: 557
committer: Nick Papior <nickpapior@gmail.com>
branch nick: trunk
timestamp: Thu 2016-08-18 12:36:36 +0200
message:
  Enabled EDM convergence criteria, controls the forces
  
  - The convergence criteria now enables converging the
    energy density matrix.
  
    This is a simple addition which does not introduce
    any complexity to the code.
    I expect it may be used to control the fineness of
    the force calculations.
    It does, however, not seem too much different than
    the Hamiltonian convergence.
------------------------------------------------------------
revno: 556
committer: Nick Papior <nickpapior@gmail.com>
branch nick: trunk
timestamp: Thu 2016-08-18 11:02:14 +0200
message:
  Re-runned all tests and updated the reference tests
  
  - I have re-runned all tests with the new defaults (mix hamiltonian
    and H converge as well.)
  
    A couple of the tests showed changes (see r554) which could
    be explained by a not fully converged system in the mix DM case.
  
    As such it seems these new defaults exhibit superior convergence
    and, hopefully, more consistent results as both the Hamiltonian and
    DM are converged.
  
    It would perhaps be interesting to also converge EDM?
  
  - A couple of the tests was not added in the previous reference frame
    and they are now there.
    I haven't compared these against the old version.
    These tests are:
      anneal-cont.out
      carbon_nanoscroll.out
      dipole_correction.out
      fe_cohp.out
      fe_noncol_kp.out
      fen.out
      force_constants.out
      ge111.out
      h2o-rhog-mixing.out
      h2o_2.out
      pb_bulk.out
      si001.out
      sinw.out
      sinw_2.out
      
------------------------------------------------------------
revno: 555
committer: Nick Papior <nickpapior@gmail.com>
branch nick: trunk
timestamp: Thu 2016-08-18 09:24:34 +0200
message:
  Updated documentation, PAO and AtomicCoordinates in new format
  
  - Updated all PAO and AtomicCoordinates entries to the new format.
------------------------------------------------------------
revno: 554
committer: Nick Papior <nickpapior@gmail.com>
branch nick: trunk
timestamp: Thu 2016-08-18 07:56:45 +0200
message:
  Run all tests, solved merge problems and updated convergence criteria
  
  - Re-run all tests.
  
    This showed a couple of interesting things.
  
    1. There was a mistake in the compute_dm code after
    the PEXSI merge when spin-orbit coupling was introduced
    2. I have removed Hprev as it essentially is the same as
    Hold. Either way it shouldn't produce a huge difference
    in the tracking of the dEbs, etc. (after all they are
    not physically used other than for convergence criteria)
    3. The change to SCF.Mix Hamiltonian resulted in a huge
    number of changes in the output. This is because the first
    step prints out the energies at INIT. However, the Hamiltonian
    is different because it is initialized after the compute_dm step.
  
  - Changed the logic in convergence criteria.
    Now the convergence criterias are additive and may be fully controlled.
    However, at least one convergence criteria must be used.
  
    Now the default convergence criteria is both the Hamiltonian and the density
    matrix.
  
    This is updated in the manual and the compatibility note.
  
  - Initially I thought the above differences in the energies was
    due to inconsistencies after r538. Hence I have created some
    simple routines in the m_energies.f90 code which updates a selected
    few of the energies.
    I think this should be adopted in the future to ensure that all
    calls to update energies are consistent.
    This will make changes to energy calculations less error-prone.
  
  - Implemented the spin-type in the following routines:
     compute_dm
     final_H_f_stress
     state_init
  
  - Changed the m_compute_max_diff to an interface code with appropriate
    size calculations. There was no reason for explicitly using the
    sparse pattern.
  
  - Fixed a bug in the molecularmechanics code (introduced by Nick r542)
  
  - Added a cyclediffs.sh script which loops on OUT.diffs files and
    it lets one easily cycle the diffs, simply do:
  
    cd Tests
    make check
    ./cyclediffs.sh
  
    and answer all the questions. Basically it makes deletes OUT.diffs
    which you have agreed isn't really a change.
  
  - The tests may now be runned via:
  
     make MPI="mpirun -np 4"
     
    which then uses the default SIESTA location.
  
    Currently the script checks whether mpirun/mpiexec
    is in SIESTA variable, and if so, does not use MPI variable.
    This makes it easier to decide on the number of cores without
    writing the full path.
------------------------------------------------------------
revno: 553
committer: Nick Papior <nickpapior@gmail.com>
branch nick: trunk
timestamp: Tue 2016-08-16 08:21:30 +0200
message:
  Updated SCF print-outs
  
  - Now dDmax and dHmax are both printed (always)
  
  - Added more digits to the output so that non-collinear
    and spin-orbit etc. have the same format.
  
  - After the final step the fermi energy is now also printed
    in the list of Final energies
------------------------------------------------------------
revno: 552
committer: Nick Papior <nickpapior@gmail.com>
branch nick: trunk
timestamp: Sat 2016-08-13 16:00:08 +0200
message:
  Fixed none orbital pivoting ('none' should be equivalent to orb+none)
  
  - If a transiesta users requests Pivot 'none' there
    was a bug related to defaulting the atomic pivoting
    table.
    This has been fixed now.
    
------------------------------------------------------------
revno: 551
committer: Nick Papior <nickpapior@gmail.com>
branch nick: trunk
timestamp: Sat 2016-08-13 12:06:00 +0200
message:
  Enabled BLAS and LAPACK sources shipped with siesta fixes lp:1593706
  
  - Updated blas.f and lapack.f to encompass all required
    routines to succesfully compile siesta without having the
    blas and lapack libraries.
  
    We still do not recommend this as performance libraries
    (especially BLAS) will drastically improve performance.
  
    The current sources (without comments) are taken from
    the lapack svn repository at revision 1776 (v3.6.1)
  
  - To make it easier to update the scripts in future
    commits a create.sh script and linalg2file.py script
    are added which enables to retrieve the correct sources
    from the basic lapack/blas sources.
  
  - Updated documentation which describes libsiestaBLAS/LAPACK.a
  
  - Enabled libsiestaBLAS/LAPACK.a in tbtrans
  
    
------------------------------------------------------------
revno: 550
committer: Nick Papior <nickpapior@gmail.com>
branch nick: trunk
timestamp: Fri 2016-08-12 08:34:43 +0200
message:
  Updated documentation and explained more on TS.Analyze
------------------------------------------------------------
revno: 549
committer: Nick Papior <nickpapior@gmail.com>
branch nick: trunk
timestamp: Fri 2016-08-12 07:59:02 +0200
message:
  Made transiesta analyzation start sooner
  
  - Moving the analyzation step more up uses less
    memory and allows extremely large systems to be
    analyzed on small laptops (execution time may be
    long).
  
  - Introducing a pivoting table for looking up the
    min/max columns improved rgn2tri algorithm by orders
    of magnitude.
  
  - Moved a couple of the integers to long for large
    scale calculations.
  
  - Removed METIS from rgn2tri analyzis
------------------------------------------------------------
revno: 548
committer: Nick Papior <nickpapior@gmail.com>
branch nick: trunk
timestamp: Thu 2016-08-11 21:47:18 +0200
message:
  Fixed command line options for siesta
  
  - The PEXSI branch introduced command line-options.
    However, that was also introduced in transiesta branch
    Now they are merged in a standard form.
  
  - Updated manual to reflect these changes.
  
  - Also fixed bug for piping AND using command line options
------------------------------------------------------------
revno: 547
committer: Nick Papior <nickpapior@gmail.com>
branch nick: trunk
timestamp: Thu 2016-08-11 18:51:04 +0200
message:
  Updated compatibility notes, MixH -> default
  
  - Updated compatibility notes for specifics regarding the 4.1
    release
  
  - Made MixHamiltonian the default mixing option.
  
  - Updated documentation for siesta by moving a couple of the
    basic entries to the new format.
------------------------------------------------------------
revno: 546
committer: Nick Papior <nickpapior@gmail.com>
branch nick: trunk
timestamp: Wed 2016-08-10 13:29:54 +0200
message:
  Removed superfluous print-outs
  
  - The memory print-outs was more than likely related
    to PEXSI for checking that the splitting of the workers
    and PEXSI-nodes
  
  - The entropy print-out is now only performed in PEXSI compilations
  
  - The defaults for the timers are now reverted in case of non-PEXSI
    runs.
  
  - Updated the manual for a couple of entries related to timings.
------------------------------------------------------------
revno: 545
committer: Nick Papior <nickpapior@gmail.com>
branch nick: trunk
timestamp: Wed 2016-08-10 13:00:11 +0200
message:
  Fixed PEXSI compilation and deferred the Nodes count
  
  - A couple of define flags for PEXSI was not up to date,
    possibly lost during the merge(?). Well...
  
  - Updated print-out of computational method in read_options.
  
  - Moved printing of number of nodes to one line
------------------------------------------------------------
revno: 544
committer: Nick Papior <nickpapior@gmail.com>
branch nick: trunk
timestamp: Wed 2016-08-10 09:53:46 +0200
message:
  Finalized the NOTES.documentation about the tags.
------------------------------------------------------------
revno: 543
fixes bug: https://launchpad.net/bugs/1611265
committer: Nick Papior <nickpapior@gmail.com>
branch nick: trunk
timestamp: Wed 2016-08-10 09:29:39 +0200
message:
  Small fixes in m_mixing according to lp:1611265
  
  - Fixed OpenMP statement
  
  - Fixed double naming of constants and routines
  
  - Fixed history_init calls in transiesta
------------------------------------------------------------
revno: 542 [merge]
committer: Nick Papior <nickpapior@gmail.com>
branch nick: trunk
timestamp: Mon 2016-08-08 15:09:40 +0200
message:
  Merged documentation, see Docs/branch-changes/NOTES.documentation
  
  This merge introduces a new documentation scheme for LaTeX.
  It intrinsically introduces clickable fdf-flags and creates 3
  relevant indices, 1) regular index, 2) fdf-flag (only!) index
  and a files index.
  
  Test-suite ran. No problems (some of them, however, needs to be 
  updated such that problems shouldn't occur)
------------------------------------------------------------
revno: 541
committer: Nick Papior <nickpapior@gmail.com>
branch nick: trunk
timestamp: Fri 2016-08-05 14:19:32 +0200
message:
  Temporary work-around for supercell changes
  
  The TS branch introduced a kill of siesta when the supercell
  was changed during an MD. This may not always be the case if the
  supercell structure is correct, but the connected supercells are
  changing. In that case will it be acceptable to continue. However,
  there may be cases where this is not applicable.
  This will be fully fixed in future cases where the supercell information
  is retained in restart files.
------------------------------------------------------------
revno: 540
committer: Nick Papior <nickpapior@gmail.com>
branch nick: trunk
timestamp: Thu 2016-08-04 15:17:48 +0200
message:
  Moved many of the CHANGES files to the branch-changes
  
  Their use will probably be discouraged to be used.
  
  The one main use for future CHANGES would provide a complete (single)
  detailed description of the branch changes.
------------------------------------------------------------
revno: 539 [merge]
committer: Nick Papior <nickpapior@gmail.com>
branch nick: trunk
timestamp: Thu 2016-08-04 14:19:02 +0200
message:
  Merged transiesta
  
  Added die routine for non-complete principal connections
  and precision control of the SE convergence.
  
  Changed the { to [ for list construction in FDF.
  
  Added fdf_bphysical to read 'VN' (value name)
------------------------------------------------------------
revno: 538 [merge]
committer: Alberto Garcia <albertog@icmab.es>
branch nick: trunk
timestamp: Thu 2016-08-04 11:27:45 +0200
message:
  Merged PEXSI-solver interface code
  
  Please see the manual for the new options related to the PEXSI
  solver. Keep in mind that this solver is competitive only for very
  large calculations.
  
  Alberto Garcia thanks Lin Lin, Chao Yang, Georg Huhs, and Nick Papior
  for their help with the design and coding of the interface.
  
  Developer note: Please see the "Notes for PEXSI operation" in
  Src/siesta.F for a brief overview of the basic coding changes
  that need to be kept into account for further development work.
------------------------------------------------------------
revno: 537
committer: Nick Papior <nickpapior@gmail.com>
branch nick: trunk
timestamp: Fri 2016-07-29 15:30:24 +0200
message:
  Fixed utility build and exact library names
  
  Changing the libvardict is now complete. There
  where several problems in utilities.
  
  Fixed all references for fdf_global_get.
------------------------------------------------------------
revno: 536
committer: Nick Papior <nickpapior@gmail.com>
branch nick: trunk
timestamp: Fri 2016-07-29 14:34:18 +0200
message:
  Removed fdf_global module
  
  - The fdf library inherently handles parallel access.
    Thus the fdf_global module was unnecessary.
    It has been removed and all calls changed.
------------------------------------------------------------
revno: 535
committer: Nick Papior <nickpapior@gmail.com>
branch nick: trunk
timestamp: Fri 2016-07-29 13:41:50 +0200
message:
  Fixes compilation of Nick libraries
  
  - libvardict.a has changed name to libfdict.a
    to make it easier to grasp.
  
  - In both NCDF and fdict libs the PP processor
    command has changed name to CPP (PP is non-standard).
  
    Further the default CPP command is now $(FC) -E -P -x c
    which may be overwritten using CPP in arch.make
------------------------------------------------------------
revno: 534
fixes bug: https://launchpad.net/bugs/1605689
committer: Nick Papior <nickpapior@gmail.com>
branch nick: trunk
timestamp: Wed 2016-07-27 21:53:42 +0200
message:
  Fixes lp:1605689, bands for NC
  
  - Interface call for diag2k in bands was erroneous
------------------------------------------------------------
revno: 533 [merge]
committer: Nick Papior <nickpapior@gmail.com>
branch nick: trunk
timestamp: Mon 2016-07-25 15:12:49 +0200
message:
  Merged elpa+MRRR
  
  - The ELPA library is now enabled through:
      Diag.ELPA T
    it relies on intrinicly added ELPA library.
  
    Later it may be externally linked.
  
    In addition to the elpa+MRR branch we have:
    defaulted the kernels.
    This is necessary in case the user does not pre-define
    the kernels.
  
  - The MRRR library is now enabled through:
      Diag.MRRR T
    it requires the ScaLAPACK library to have the MRRR routines.
  
    Currently there is no handling if the ScaLAPACK library does
    not have these routines.
------------------------------------------------------------
revno: 532
committer: Nick Papior <nickpapior@gmail.com>
branch nick: trunk
timestamp: Mon 2016-07-25 07:26:03 +0200
message:
  Added -o to gnubands, made new.gnubands -> gnubands
  
  - Updated gnubands utility
  
  - Added -o option for gnubands.
  
    It now allows direct writing to a file without
    piping.
  
  - Re-formatted eigfat2plot (no code change)
------------------------------------------------------------
revno: 531
fixes bug: https://launchpad.net/bugs/1605304
committer: Nick Papior <nickpapior@gmail.com>
branch nick: trunk
timestamp: Thu 2016-07-21 20:10:36 +0200
message:
  Fixed geometry constrainst and wrap-arounds fixes lp:1605304
  
  - Allow negative ranges of atoms without specifying the step
    number
------------------------------------------------------------
revno: 530
committer: Nick Papior <nickpapior@gmail.com>
branch nick: trunk
timestamp: Wed 2016-07-13 11:20:56 +0200
message:
  Removed all references to "contiguous" attribute
  
  - Further the atom_graph and m_supercell now have
    restricted their module use to be privatized.
  
  - All source files have their contiguous attribute
    removed.
  
    We should add this as a preprocessor flag in case
    the compiler supports it.
  
    Several older compilers does not support this :(
------------------------------------------------------------
revno: 529
committer: Nick Papior <nickpapior@gmail.com>
branch nick: trunk
timestamp: Tue 2016-07-05 12:44:45 +0200
message:
  Added si111-spinpol reference test
  
  - The spin polarized Si111 test had never been 
    added to the reference.
------------------------------------------------------------
revno: 528 [merge]
committer: Nick Papior <nickpapior@gmail.com>
branch nick: trunk
timestamp: Tue 2016-07-05 11:04:07 +0200
message:
  Merged spin type
  
  - The spin data-type has been added.
    This encompass a simple derived data type
    to contain all relevant information regarding
    the dimensionality of different parts of the
    physical quantities.
  
    I.e. it knows how big the Hamiltonian, Density matrix,
    Energy density matrix, Grids, etc. are dependent on the
    system setup.
  
    All future use of the spin variables should pass the
      type(tSpin) :: spin
    and use its components.
  
  - To see an example (correct use), see vmat.F90
------------------------------------------------------------
revno: 527
committer: Nick Papior <nickpapior@gmail.com>
branch nick: trunk
timestamp: Tue 2016-06-28 14:42:55 +0200
message:
  Fixes dH read in tbtrans
  
  - The dH read is now consistent with sisl.
  
    In a future commit we will delete the Util/TS/TB
    folder as that has been fully superseeded with sisl.
  
  - Updated option print-out of dH options
  
  - Fixed reading the netcdf data with not all levels
    existing
  
  - Fixed reading from dH with multiple spin indices
------------------------------------------------------------
revno: 526 [merge]
committer: Nick Papior <nickpapior@gmail.com>
branch nick: trunk
timestamp: Tue 2016-06-28 07:57:03 +0200
message:
  Fixes LDA+U implementation by also allowing non-GGA-PBE XC
  
  - Also explicitly adds several broadcast calls of the
    LDA+U internals. Some are redundant, but for clarity
    they are added
------------------------------------------------------------
revno: 525 [merge]
committer: Alberto Garcia <albertog@icmab.es>
branch nick: trunk
timestamp: Thu 2016-06-23 14:27:35 +0200
message:
  Merged 4.0-500
  
  * Update list of contributors.
  * Electric-field/slab-dipole-correction fix.
  * Fix to avoid ps reparametrization in bessel case
  * Remove Util/pseudo-xml
  * Other minor changes in README files
------------------------------------------------------------
Use --include-merged or -n0 to see merged revisions.
